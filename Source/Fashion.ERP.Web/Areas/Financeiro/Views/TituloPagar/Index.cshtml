@model Fashion.ERP.Web.Areas.Financeiro.Models.PesquisaTituloPagarModel

@section javascript{@Scripts.Render(Links.Bundles.Scripts.PdfObject)}

<div class="well well-sm">
    @Html.ActionLinkAuth("Novo", MVC.Financeiro.TituloPagar.Novo(), new { @class = "btn btn-primary" })
</div>

@Html.ValidationSummaryEx()
@using (Html.BeginForm(MVC.Financeiro.TituloPagar.Index(), FormMethod.Post, new { @class = "form-horizontal small-labels" }))
{
    @Html.AntiForgeryToken()
    
    <div class="panel-group" id="accordion2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <a data-toggle="collapse" data-parent="#accordion2" href="#collapsePesquisar">Pesquisar
                </a>
            </div>
            <div id="collapsePesquisar" class="panel-collapse collapse">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.Unidade)
                                <div class="col-sm-8 col-md-8 col-lg-7">
                                    @Html.DropDownListFor(x => x.Unidade, null, "-- Selecione --", new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.Numero)
                                <div class="col-sm-8 col-md-8 col-lg-7">
                                    @Html.TextBoxFor(x => x.Numero, new { @class = "numeric-only form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.SituacaoTitulo)
                                <div class="col-sm-8 col-md-8 col-lg-7">
                                    @Html.DropDownListFor(x => x.SituacaoTitulo, Model.SituacaoTitulo.ToSelectList(), "-- Selecione --", new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.DataEmissaoInicio)
                                <div class="col-sm-8 col-md-8 col-lg-7  ">
                                    <div class="col-lg-5 col-md-5 padding0">
                                        <div class="">
                                            @(Html.Kendo().DatePickerFor(x => x.DataEmissaoInicio))
                                        </div>
                                    </div>
                                    <div class="col-lg-7 col-md-7">
                                        <div class="form-group form-group-sm" style="margin-bottom: 0;">
                                            @Html.LabelFor(x=>x.DataEmissaoFim, new { @class = "control-label control-label-meio col-sm-3" })
                                            <div class="col-lg-9 col-md-9 padding0">
                                                @(Html.Kendo().DatePickerFor(x => x.DataEmissaoFim))
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.Fornecedor)
                                <div class="col-sm-8 col-md-8 col-lg-7  ">
                                    @Html.CustomKendoComboBoxForFornecedor(x => x.Fornecedor)
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.DataVencimentoInicio)
                                <div class="col-sm-8 col-md-8 col-lg-7  ">
                                    <div class="col-lg-5 col-md-5 padding0">
                                        <div class="">
                                            @(Html.Kendo().DatePickerFor(x => x.DataVencimentoInicio))
                                        </div>
                                    </div>
                                    <div class="col-lg-7 col-md-7">
                                        <div class="form-group form-group-sm" style="margin-bottom: 0;">
                                            @Html.LabelFor(x=>x.DataVencimentoFim, new { @class = "control-label control-label-meio col-sm-3" })
                                            <div class="col-lg-9 col-md-9 padding0">
                                                @(Html.Kendo().DatePickerFor(x => x.DataVencimentoFim))
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.DataCadastroInicio)
                                <div class="col-sm-8 col-md-8 col-lg-7  ">
                                    <div class="col-lg-5 col-md-5 padding0">
                                        <div class="">
                                            @(Html.Kendo().DatePickerFor(x => x.DataCadastroInicio))
                                        </div>
                                    </div>
                                    <div class="col-lg-7 col-md-7">
                                        <div class="form-group form-group-sm" style="margin-bottom: 0;">
                                            @Html.LabelFor(x=>x.DataCadastroFim, new { @class = "control-label control-label-meio col-sm-3" })
                                            <div class="col-lg-9 col-md-9 padding0">
                                                @(Html.Kendo().DatePickerFor(x => x.DataCadastroFim))
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>                                                   
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.ValorInicio)
                                <div class="col-sm-8 col-md-8 col-lg-7  ">
                                    <div class="col-lg-5 col-md-5 padding0">
                                        <div class="">
                                            @Html.EditorFor(x => x.ValorInicio)
                                        </div>
                                    </div>
                                    <div class="col-lg-7 col-md-7">
                                        <div class="form-group form-group-sm" style="margin-bottom: 0;">
                                            @Html.LabelFor(x=>x.ValorFim, new { @class = "control-label control-label-meio col-sm-3" })
                                            <div class="col-lg-9 col-md-9 padding0">
                                                @Html.EditorFor(x => x.ValorFim)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="well">
                        <div class="row">
                            <div class="col-sm-12">
                                @Html.HiddenFor(x => x.ModoConsulta)
                                <div class="btn-group" data-toggle="buttons">
                                    <label class="btn btn-default active">
                                        <input name="btn-ModoConsulta" type="radio" value="listagem"/>Listagem
                                    </label>
                                    <label class="btn btn-default">
                                        <input name="btn-ModoConsulta" type="radio" value="impressao"/>Impressão
                                    </label>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-10 col-md-11">
                                <div class="col-sm-4">
                                    <div id="row-imprimir" style="display: none">
                                        <div class="form-group form-group-sm">
                                            @Html.LabelForRequired(x => x.AgruparPor)
                                            <div class="col-sm-8 col-md-8 col-lg-7  ">
                                                @Html.DropDownList("AgruparPor", null, "--Selecione--", new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <div class="col-sm-4">
                                    <div class="form-group form-group-sm">
                                        @Html.LabelForRequired(x => x.OrdenarPor)
                                        <div class="col-sm-8 col-md-8 col-lg-7  ">
                                            @Html.DropDownList("OrdenarPor", null, "--Selecione--", new { @class = "form-control" })
                                        </div>
                                    </div>
                                </div>
                                <div class="col-sm-4">
                                    <div class="form-group form-group-sm">
                                        @Html.Label("OrdenarEm", "Em", new { @class = "control-label col-sm-2 col-md-1" })
                                        <div class="col-sm-8 col-md-8 col-lg-7  ">
                                            <select name="OrdenarEm" class="form-control">
                                                <option value="asc">Ascendente</option>
                                                <option value="desc">Descendente</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2 col-md-1 form-group">
                                <button id="pesquisar-relatorio" class="btn btn-default pull-right" type="button" data-loading-text="Aguarde..." style="display: none;">Pesquisar</button>
                                <button id="pesquisar-grid" class="btn btn-default pull-right" type="submit" data-loading-text="Aguarde...">Pesquisar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

<div id="pdf"></div>

<div class="table-responsive">
    @(Html.Kendo().Grid(Model.Grid)
          .Name("Grid")
          .Columns(columns =>
          {
              columns.Bound(x => x.UnidadeEstocadora);
              columns.Bound(x => x.Numero);
              columns.Bound(x => x.Parcela);
              columns.Bound(x => x.Plano);
              columns.Bound(x => x.Fornecedor);
              columns.Bound(x => x.Vencimento).Format("{0:dd/MM/yyyy}");
              columns.Bound(x => x.Valor).Format("{0:C}");
              columns.Bound(x => x.SaldoDevedor).Format("{0:C}");
              columns.Bound(x => x.SituacaoTitulo);
              columns.Template(item => Html.EditarAuth(MVC.Financeiro.TituloPagar.Editar(item.Id))).Width(80);
              columns.Template(item => Html.ActionLinkAuth("Baixar", MVC.Financeiro.TituloPagar.Baixar(item.Id), new { @class = "btn btn-small btn-primary" })).Width(80);
          }))
</div>

<script>
    $(function () {
        // Seleciona o modo de consulta
        $('button[name=btn-ModoConsulta]').on('click', function () {

            var $ModoConsulta = $('#ModoConsulta');

            if (this.value == 'impressao') {
                $ModoConsulta.val('Imprimir');

                $('#row-imprimir').show();
                $('#pesquisar-relatorio').show();
                $('#pesquisar-grid').hide();

            } else {
                $ModoConsulta.val('Listar');

                $('#row-imprimir').hide();
                $('#pesquisar-relatorio').hide();
                $('#pesquisar-grid').show();

            }
        });
    })
</script>

@{
    Html.RenderAction("PesquisarComParametros", "Fornecedor", new { area = "Comum", SelecaoUnica = "true" });
    Html.RenderAction("Pesquisar", "Banco", new { area = "Comum" });
}