@model Fashion.ERP.Web.Areas.Producao.Models.PesquisaFichaTecnicaModel

<div class="well well-small">
    @Html.ActionLinkAuth("Novo", MVC.Producao.FichaTecnica.Novo(), new { @class = "btn btn-primary" })
</div>
@using (Html.BeginForm(MVC.Producao.FichaTecnica.Index(), FormMethod.Post, new { @class = "form-horizontal  small-labels" }))
{
    @Html.AntiForgeryToken()
    <div class="accordion" id="accordion2">
        <div class="accordion-group">
            <div class="accordion-heading">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapsePesquisar">
                    Pesquisar
                </a>
            </div>
            <div id="collapsePesquisar" class="accordion-body collapse">
                <div class="accordion-inner">
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Referencia, new { @class = "control-label "})
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Referencia, new { @class = "input-medium"})
                                </div>
                            </div>
                        </div>
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Tag, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Tag, new { @class = "input-small" })/
                                    @Html.TextBoxFor(x => x.Ano, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Descricao, new { @class = "control-label "})
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Descricao)
                                </div>
                            </div>
                        </div>
                        <div class="span4">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.ClassificacaoDificuldade, new { @class = "control-label"})
                                <div class="controls">
                                    @Html.DropDownList("ClassificacaoDificuldade", null, "-- Selecione --", new { @class = "input-large" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Estilista)
                                <div class="controls">
                                    @Html.DropDownListFor(x => x.Estilista, null, "-- Selecione --", new { @class = "input-large" })                    
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.DataCadastro, new { @class = "control-label"})
                                <div class="controls">
                                    @(Html.Kendo().DatePickerFor(x => x.DataCadastro))
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.Label("DataCadastroAte", "Até", new { @class = "control-label"})
                                <div class="controls">
                                    @(Html.Kendo().DatePickerFor(x => x.DataCadastroAte))
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span12">
                            <button class="btn btn-info pull-right" type="submit" data-loading-text="Aguarde...">Pesquisar</button>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}

@Html.ValidationSummaryEx()
@(Html.Kendo().Grid(Model.Grid)
    .Name("Grid")
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(true)
        .PageSize(15)
        .Read(read => read.Action("ObtenhaListaGridModel", "FichaTecnica").Data("ObtenhaModelJsonObject"))
        .Events(events => events.Error("onKendoGridError"))
    )
    .Columns(columns =>
    {
        columns.Bound(x => x.Referencia);
        columns.Bound(x => x.Tag);
        columns.Bound(x => x.Ano);
        columns.Bound(x => x.Descricao);
        columns.Bound(x => x.Colecao);
        columns.Bound(x => x.Marca);
        columns.Bound(x => x.Natureza);
        columns.Bound(p => p.Foto).ClientTemplate( "#if(Foto != null  && Foto != '') {#" + 
                "<a href='" + "#= Foto #" + "'' data-lightbox='foto' title='Material'><img src='" + "#= Foto #" + "' class='img-rounded' style='width: 48px; height: 48px;'/></a>"+ 
            "#}#").Width(60).Sortable(false).Groupable(false);
        columns.Template(@<text></text>).ClientTemplate(@Html.ActionLinkAuth("Editar", "Editar", "FichaTecnica", new {Id = "#= Id #", Area = "Producao"}, new {@class = "btn btn-primary"}).ToHtmlString()).Width(80).Title("");               
        columns.Template(@<text></text>).ClientTemplate(@Html.ActionLinkAuth("Copiar", "Copiar", "FichaTecnica", new {Id = "#= Id #", Area = "Producao"}, new {@class = "btn btn-primary"}).ToHtmlString()).Width(80).Title("");               
        columns.Template(@<text></text>).ClientTemplate( "<div class='myMenu'><li>Imprimir<ul><li>" + 
                @Html.ActionLinkAuth("Estimativa de Custo", "FichaTecnicaEstimativaCusto", "RelatorioFichaTecnicaEstimativaCusto", new {Id = "#= Id #", Area = "Producao"}, new {target = "_blank"}).ToHtmlString()
            + "</li><li>"+
                ""
            +"</li></ul></li></div>");               




    })    
    .Events(events => events.DataBound("dataBound"))
    .Resizable(resize => resize.Columns(true))
    .Reorderable(reorder => reorder.Columns(true))
    .Pageable()
    .Sortable()
    .Groupable()   
      )

<style>
    #Grid td
    {
        overflow: visible;
    }
    
    #Grid .k-menu
    {
        display: inline-block;
        border-right-width: 0;
    }
</style>

<script>
    function dataBound(e) {
        e.sender.tbody.find(".myMenu").kendoMenu(); 
    }
</script>