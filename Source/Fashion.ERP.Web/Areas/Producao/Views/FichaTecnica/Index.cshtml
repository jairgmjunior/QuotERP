@model Fashion.ERP.Web.Areas.Producao.Models.PesquisaFichaTecnicaModel

@section javascript{@Scripts.Render(Links.Bundles.Scripts.PdfObject)}

<div class="well well-small">
    @Html.ActionLinkAuth("Novo", MVC.Producao.FichaTecnica.Novo(), new { @class = "btn btn-primary" })
</div>
@using (Html.BeginForm(MVC.Producao.FichaTecnica.Index(), FormMethod.Post, new { @class = "form-horizontal  small-labels" }))
{
    @Html.AntiForgeryToken()
    <div class="accordion" id="accordion2">
        <div class="accordion-group">
            <div class="accordion-heading">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapsePesquisar">
                    Pesquisar
                </a>
            </div>
            <div id="collapsePesquisar" class="accordion-body collapse">
                <div class="accordion-inner">
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Referencia, new { @class = "control-label "})
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Referencia, new { @class = "input-medium"})
                                </div>
                            </div>
                        </div>
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Tag, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Tag, new { @class = "input-small" })/
                                    @Html.TextBoxFor(x => x.Ano, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Descricao, new { @class = "control-label "})
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Descricao)
                                </div>
                            </div>
                        </div>
                        <div class="span4">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.ClassificacaoDificuldade, new { @class = "control-label"})
                                <div class="controls">
                                    @Html.DropDownList("ClassificacaoDificuldade", null, "-- Selecione --", new { @class = "input-large" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Estilista)
                                <div class="controls">
                                    @Html.DropDownListFor(x => x.Estilista, null, "-- Selecione --", new { @class = "input-large" })                    
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.DataCadastro, new { @class = "control-label"})
                                <div class="controls">
                                    @(Html.Kendo().DatePickerFor(x => x.DataCadastro))
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.Label("DataCadastroAte", "Até", new { @class = "control-label"})
                                <div class="controls">
                                    @(Html.Kendo().DatePickerFor(x => x.DataCadastroAte))
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Catalogo, new {@class = "control-label"})
                                <div class="controls">
                                    @Html.EditorFor(x => x.Catalogo)
                                </div>
                            </div>
                        </div>
                        <div class="span4">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Colecao, new { @class = "control-label"})
                                <div class="controls">
                                    @Html.DropDownList("Colecao", null, "-- Selecione --", new { @class = "input-large" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="well">
                        <div class="row">
                            <div class="span3">
                                <div class="btn-group" data-toggle="buttons-radio">
                                    <button name="btn-ModoConsulta" class="btn btn-info active" type="button" value="listagem">Listagem</button>
                                    <button name="btn-ModoConsulta" class="btn btn-info" type="button" value="impressao">Impressão</button>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
        <div class="span10">
            <div id="row-imprimir" style="display: none">
                <div class="span3">
                    <div class="control-group">
                        @Html.LabelForRequired(x => x.AgruparPor)
                        <div class="controls">
                            @Html.DropDownList("AgruparPor", "--Selecione--")
                        </div>
                    </div>
                </div>
                <div class="span3">
                    <div class="control-group">
                        @Html.LabelForRequired(x => x.OrdenarPor, new { @class = "control-label " })
                        <div class="controls">
                            @Html.DropDownList("OrdenarPor", "--Selecione--")
                        </div>
                    </div>
                </div>
                <div class="span3">
                    <div class="control-group">
                        @Html.LabelForRequired(x => x.OrdenarEm, new { @class = "control-label " })
                        <div class="controls">
                            <select name="OrdenarEm">
                                <option value="asc">Ascendente</option>
                                <option value="desc">Descendente</option>
                            </select>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="span3">
            <button id="pesquisar-relatorio" class="btn btn-info pull-right" type="button" data-loading-text="Aguarde..." style="display: none;">Pesquisar</button>
            <button id="pesquisar-grid-ajax" class="btn btn-info pull-right" type="submit" data-loading-text="Aguarde...">Pesquisar</button>
        </div>
    </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div id="pdf"></div>

@Html.ValidationSummaryEx()
@(Html.Kendo().Grid(Model.Grid)
    .Name("Grid")
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(true)
        .PageSize(15)
        .Read(read => read.Action("ObtenhaListaGridModel", "FichaTecnica").Data("ObtenhaModelJsonObject"))
        .Events(events => events.Error("onKendoGridError"))
    )
    .Columns(columns =>
    {
        columns.Bound(x => x.Referencia);
        columns.Bound(x => x.Tag);
        columns.Bound(x => x.Ano);
        columns.Bound(x => x.Descricao);
        columns.Bound(x => x.Colecao);
        columns.Bound(x => x.Marca);
        columns.Bound(x => x.Natureza);
        columns.Bound(p => p.Foto).ClientTemplate( "#if(Foto != null  && Foto != '') {#" + 
                "<a href='" + "#= Foto #" + "'' data-lightbox='foto' title='Material'><img src='" + "#= Foto #" + "' class='img-rounded' style='width: 48px; height: 48px;'/></a>"+ 
            "#}#").Width(60).Sortable(false).Groupable(false);
        columns.Template(@<text></text>).ClientTemplate(@Html.ActionLinkAuth("Editar", "Editar", "FichaTecnica", new {Id = "#= Id #", Area = "Producao"}, new {@class = "btn btn-primary"}).ToHtmlString()).Width(80).Title("");               
        columns.Template(@<text></text>).ClientTemplate(@Html.ActionLinkAuth("Copiar", "Copiar", "FichaTecnica", new {Id = "#= Id #", Area = "Producao"}, new {@class = "btn btn-primary"}).ToHtmlString()).Width(80).Title("");               
        columns.Template(@<text></text>).ClientTemplate( "<div class='myMenu'><li>Imprimir<ul><li>" + 
                @Html.ActionLinkAuth("Estimativa de Custo", "FichaTecnicaEstimativaCusto", "RelatorioFichaTecnicaEstimativaCusto", new {Id = "#= Id #", Area = "Producao"}, new {target = "_blank"}).ToHtmlString()
            + "</li><li>"+
                @Html.ActionLinkAuth("Ficha Técnica", "FichaTecnica", "RelatorioFichaTecnica", new {Id = "#= Id #", Area = "Producao"}, new {target = "_blank"}).ToHtmlString()
            +"</li></ul></li></div>");          
    })    
    .Events(events => events.DataBound("dataBound"))
    .Resizable(resize => resize.Columns(true))
    .Reorderable(reorder => reorder.Columns(true))
    .Pageable()
    .Sortable()
    .Groupable()   
)

<style>
    #Grid td
    {
        overflow: visible;
    }
    
    #Grid .k-menu
    {
        display: inline-block;
        border-right-width: 0;
    }
</style>

<script>
    $(function () {

        // Seleciona o modo de consulta
        $('button[name=btn-ModoConsulta]').on('click', function () {

            var $ModoConsulta = $('#ModoConsulta');

            if (this.value == 'impressao') {
                $ModoConsulta.val('Imprimir');

                $('#row-imprimir').show();
                $('#pesquisar-relatorio').show();
                $('#pesquisar-grid-ajax').hide();

            } else {
                $ModoConsulta.val('Listar');
                $("#pdf").html("");
                $("#pdf").attr("style", "");
                $("#Grid").show();
                $('#row-imprimir').hide();
                $('#pesquisar-relatorio').hide();
                $('#pesquisar-grid-ajax').show();

            }
        });
    });

    function dataBound(e) {
        e.sender.tbody.find(".myMenu").kendoMenu(); 
    } 
</script>

