@model Fashion.ERP.Web.Areas.Producao.Models.OrdemProducaoModel

<fieldset>
    <legend>Dados básicos</legend>
    <div class="row">
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelForRequired(x => x.Numero)
                <div class="controls">
                    @(Html.Kendo().NumericTextBoxFor(x => x.Numero)
                      .Format("n0").Decimals(0)
                      .HtmlAttributes(new { @class = "integer input-small" })
                          .Min(0).Enable(false).Spinners(false))
                    @Html.HiddenFor(x => x.Numero)
                    @Html.ValidationMessageFor(x => x.Numero, null, new { @class="help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelForRequired(x => x.Tag)
                <div class="controls">
                    @Html.TextBoxFor(x => x.Tag, new { @class = "input-small"}) / 
                    @Html.TextBoxFor(x => x.Ano, new { @class = "integer numeric-only input-mini"})
                    @Html.ValidationMessageFor(x => x.Tag, null, new { @class="help-block" })
                    @Html.ValidationMessageFor(x => x.Ano, null, new { @class="help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelForRequired(x => x.Data)
                <div class="controls">
                    @Html.Kendo().DatePickerFor(x => x.Data).Min(DateTime.Now)
                    @Html.ValidationMessageFor(x => x.Data, null, new { @class="help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelForRequired(x => x.Descricao)
                <div class="controls">
                    @Html.TextBoxFor(x => x.Descricao, new { disabled = "disabled" })
                    @Html.HiddenFor(x => x.Descricao)
                    @Html.ValidationMessageFor(x => x.Data, null, new { @class="help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelForRequired(x => x.Observacao)
                <div class="controls">
                    @Html.EditorFor(x => x.Observacao)
                    @Html.ValidationMessageFor(x => x.Observacao, null, new { @class="help-block" })
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="form-group">
                @Html.LabelForRequired(x => x.SituacaoOrdemProducao)
                <div class="controls">
                    @Html.DropDownListFor(x => x.SituacaoOrdemProducao, Model.SituacaoOrdemProducao.ToSelectList())
                    @Html.ValidationMessageFor(x => x.SituacaoOrdemProducao, null, new { @class="help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelForRequired(x => x.TipoOrdemProducao)
                <div class="controls">
                    @Html.DropDownListFor(x => x.TipoOrdemProducao, Model.TipoOrdemProducao.ToSelectList())
                    @Html.ValidationMessageFor(x => x.TipoOrdemProducao, null, new { @class="help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelForRequired(x => x.DataProgramacao)
                <div class="controls">
                    @Html.Kendo().DatePickerFor(x => x.DataProgramacao).Min(DateTime.Now)
                    @Html.ValidationMessageFor(x => x.DataProgramacao, null, new { @class="help-block" })
                </div>
            </div>
            <div class="form-group">
                @Html.LabelForRequired(x => x.DataPrevisao)
                <div class="controls">
                    @Html.Kendo().DatePickerFor(x => x.DataPrevisao).Min(DateTime.Now)
                    @Html.ValidationMessageFor(x => x.DataPrevisao, null, new { @class="help-block" })
                </div>
            </div>
            
        </div>
    </div>
</fieldset>

<fieldset>
    <legend>Matriz solicitada</legend>
    <table id="table-matriz" class="table table-striped table-condensed" style="width: 250px"><!-- Alterar dinamicamente o tamanho -->
        <thead>
            @if (Model.ItemTamanhos.Any())
            {
                <tr>
                    <th>Variação</th>
                    @foreach (var tamanho in Model.ItemTamanhos)
                    {
                        <th>@(ViewBag.TamanhosDicionario[tamanho])</th>
                    }
                </tr>
            }
        </thead>
        <tbody>
            @{
                long totalQtdMatriz = 0;
            }
            @if (Model.ItemVariacaoMatrizes.Any() && Model.ItemTamanhos.Any())
            {
                int cntItemQuantidade = 0;
                foreach (var variacao in Model.ItemVariacaoMatrizes)
                {
                    <tr>
                        <td>
                            <input name="ItemVariacaoMatrizes" type="hidden" value="@variacao" />
                            @(ViewBag.VariacoesDicionario[variacao])
                        </td>
                        @foreach (var tamanho in Model.ItemTamanhos)
                        {
                            totalQtdMatriz += Model.ItemQuantidades.ElementAtOrDefault(cntItemQuantidade);
                            <td>
                                <input name="ItemTamanhos" type="hidden" value="@tamanho"/>
                                <input type="text" name="ItemQuantidades" class="item-matriz integer" style="width: 60px" value="@Model.ItemQuantidades.ElementAtOrDefault(cntItemQuantidade)"/>
                            </td>
                            ++cntItemQuantidade;
                        }
                    </tr>
                }
            }
            
            <tr>
                <td id="totalPecas" colspan="@(Model.ItemTamanhos != null ? Model.ItemTamanhos.Count + 1 : 0)" style="text-align: right; display: @(totalQtdMatriz == 0 ? "none" : "table-cell");">
                    <label style="padding-top: 5px;">Total peças: <input id="totalItens" type="text" class="integer input-small" readonly="readonly" value="@totalQtdMatriz"/></label>
                </td>
            </tr>
        </tbody>
    </table>
</fieldset>

<fieldset>
    <legend>Fluxo básico</legend>
    <div class="form-group">
        @Html.LabelForRequired(x => x.FluxoDepartamentos)
        <div class="controls">
            @Html.DropDownList("DepartamentoProducao", null, new { @class = "input-large" })
            <button id="btn-add" type="button" class="btn"><i class="icon-plus"></i></button>
            <table id="table-departamento" class="table table-striped table-condensed" style="width: 250px">
                <thead>
                    <tr>
                        <th></th>
                        <th style="width: 16px"></th>
                        <th style="width: 16px"></th>
                        <th style="width: 16px"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.FluxoDepartamentos != null)
                    {
                        foreach (var departamento in Model.FluxoDepartamentos)
                        {
                            <tr>
                                <td>
                                    @(ViewBag.DepartamentosDicionario[departamento])
                                    <input type="hidden" name="FluxoDepartamentos" value="@(departamento)"/>
                                </td>
                                <td><a href="javascript:void(0)" onclick="Delete(this)"><i class="icon-remove"></i></a></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</fieldset>
<script>
    $(document).ready(function () {

        @if (this.IsEditar())
        {
        <text>
        // Cria os kendoNumericTextBox da matriz
        $(".item-matriz").each(function () {
            $(this).kendoNumericTextBox({
                format: "n0",
                min: 0,
                spinners: false,
                width: 60,
                change: atualizaQuantidadeTotal
            });
        });
        </text>
        }

        $('#Tag, #Ano').on('change', function() {
            var tag = $('#Tag').val();
            var ano = $('#Ano').val();

            if (tag != '' && ano != '') {
                $.getJSON('/Producao/OrdemProducao/PesquisarMatriz?tag=' + tag + '&ano=' + ano, function (data) {
                    if (data.erro) {
                        alert(data.erro);
                        $("#Tag").focus();
                    } else {
                        $('input[name=Descricao]').val(data.descricao);

                        // Adiciona o Header
                        var thead = '<tr>\
                                    <th>Variação</th>';
                        $.each(data.tamanhoSiglas, function (i, sigla) {
                            thead += '<th>' + sigla + '</th>';
                        });
                        thead += '</tr>';
                        $('#table-matriz thead').append(thead);

                        // Adiciona o Body
                        var tbody = '';
                        $.each(data.variacaoIds, function (i, variacaoId) {
                            tbody +=
                                '<tr>\
                                    <td><input name="ItemVariacaoMatrizes" type="hidden" value="' + variacaoId + '"/>' + data.variacaoNomes[i] + '</td>';

                            $.each(data.tamanhoIds, function (j, tamanhoId) {
                                tbody +=
                                    '<td>\
                                        <input name="ItemTamanhos" type="hidden" value="' + tamanhoId + '"/>\
                                        <input type="text" name="ItemQuantidades" class="item-matriz integer" style="width: 60px" />\
                                    </td>';
                            });
                            tbody += '</tr>';
                        });
                        $('#table-matriz tbody').prepend(tbody);


                        // Cria os kendoNumericTextBox da matriz
                        $(".item-matriz").each(function () {
                            $(this).kendoNumericTextBox({
                                format: "n0",
                                min: 0,
                                spinners: false,
                                width: 60,
                                change: atualizaQuantidadeTotal
                            });
                        });

                        $('#totalPecas').show().attr('colspan', data.tamanhoIds.length + 1);;
                    }
                });
            }
        });


        function atualizaQuantidadeTotal() {

            var totalItens = 0;

            $('.item-matriz[data-role="numerictextbox"]').each(function () {
                var item = $(this).data("kendoNumericTextBox");
                totalItens += item.value();
            });

            $('#totalItens').val(totalItens);
        }

        $('#btn-add').on('click', function () {
            
            var departamentoId = $('#DepartamentoProducao').val();
            var departamento = $('#DepartamentoProducao option:selected').text();

            // Verificar se já está na lista
            var cadastrado = false;
            $('input[name=FluxoDepartamentos]').each(function () {
                if ( $(this).val() == departamentoId) {
                    alert("O departamento escolhido já está cadastrado.");
                    cadastrado = true;
                    return;
                }
            });

            if (cadastrado == false) {
                $('#table-departamento tbody').append(
                    '<tr>\
                    <td>' + departamento + '<input type="hidden" name="FluxoDepartamentos" value="' + departamentoId + '"/></td>\
                    <td><a href="javascript:void(0)" onclick="Delete(this)"><i class="icon-remove"></i></a></td>\
                </tr>');
            }
        });
    });

    function Delete(a) {
        var row = $(a).parents('tr:first');
        row.fadeTo('fast', 0, function () {
            row.remove();
        });
    }
</script>