@model Fashion.ERP.Web.Areas.Producao.Models.OrdemProducaoModel

<style>
    /* Esconde o primeiro ^ e o último ˅ */
    #table-departamento tr:first-child .icon-chevron-up,
    #table-departamento tr:last-child .icon-chevron-down {
        display: none;
    }
</style>

<fieldset>
    <legend><small>Dados básicos</small></legend>
    <div class="row">
        <div class="span6">
            <div class="control-group">
                @Html.LabelForRequired(x => x.Numero)
                <div class="controls">
                    @Html.EditorFor(x => x.Numero)
                    @Html.ValidationMessageFor(x => x.Numero, null, new { @class="help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.Tag)
                <div class="controls">
                    @Html.EditorFor(x => x.Tag)
                    @Html.EditorFor(x => x.Ano)
                    @Html.ValidationMessageFor(x => x.Tag, null, new { @class="help-block" })
                    @Html.ValidationMessageFor(x => x.Ano, null, new { @class="help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.Data)
                <div class="controls">
                    @Html.EditorFor(x => x.Data)
                    @Html.ValidationMessageFor(x => x.Data, null, new { @class="help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.Descricao)
                <div class="controls">
                    @Html.EditorFor(x => x.Descricao)
                    @Html.ValidationMessageFor(x => x.Data, null, new { @class="help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.Observacao)
                <div class="controls">
                    @Html.EditorFor(x => x.Observacao)
                    @Html.ValidationMessageFor(x => x.Observacao, null, new { @class="help-block" })
                </div>
            </div>
        </div>
        <div class="span6">
            <div class="control-group">
                @Html.LabelForRequired(x => x.SituacaoOrdemProducao)
                <div class="controls">
                    @Html.DropDownListFor(x => x.SituacaoOrdemProducao, Model.SituacaoOrdemProducao.ToSelectList())
                    @Html.ValidationMessageFor(x => x.SituacaoOrdemProducao, null, new { @class="help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.TipoOrdemProducao)
                <div class="controls">
                    @Html.DropDownListFor(x => x.TipoOrdemProducao, Model.TipoOrdemProducao.ToSelectList())
                    @Html.ValidationMessageFor(x => x.TipoOrdemProducao, null, new { @class="help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.DataProgramação)
                <div class="controls">
                    @Html.EditorFor(x => x.DataProgramação)
                    @Html.ValidationMessageFor(x => x.DataProgramação, null, new { @class="help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.DataPrevisao)
                <div class="controls">
                    @Html.EditorFor(x => x.DataPrevisao)
                    @Html.ValidationMessageFor(x => x.DataPrevisao, null, new { @class="help-block" })
                </div>
            </div>
            
        </div>
    </div>
</fieldset>

<fieldset>
    <legend><small>Matriz solicitada</small></legend>
    <table id="table-matriz" class="table table-striped table-condensed" style="width: 250px"><!-- Alterar dinamicamente o tamanho -->
        <thead>
            <tr>
                @if (Model.ItemTamanhos != null)
                {
                    <th>Variação</th>
                    foreach (var tamanho in Model.ItemTamanhos)
                    {
                        <th>@(ViewBag.TamanhosDicionario[tamanho])</th>
                    }
                }
            </tr>
        </thead>
        <tbody>
            @if (Model.ItemVariacaoMatrizes != null && Model.ItemTamanhos != null)
            {
                foreach (var variacao in Model.ItemVariacaoMatrizes)
                {
                    <tr>
                        <td>@(ViewBag.VariacoesDicionario[variacao])</td>
                        @foreach (var tamanho in Model.ItemTamanhos)
                        {
                            <td>
                                <input name="ItemQuantidades"/>
                            </td>
                        }
                    </tr>
                }
            }
        </tbody>
    </table>
</fieldset>

<fieldset>
    <legend><small>Fluxo básico</small></legend>
    <div class="control-group">
        @Html.LabelForRequired(x => x.FluxoDepartamentos)
        <div class="controls">
            @Html.DropDownList("DepartamentoProducao", null, new { @class = "input-large" })
            <button id="btn-add" type="button" class="btn"><i class="icon-plus"></i></button>
            <table id="table-departamento" class="table table-striped table-condensed" style="width: 250px">
                <thead>
                    <tr>
                        <th></th>
                        <th style="width: 16px"></th>
                        <th style="width: 16px"></th>
                        <th style="width: 16px"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.FluxoDepartamentos != null)
                    {
                        foreach (var departamento in Model.FluxoDepartamentos)
                        {
                            <tr>
                                <td>
                                    @(ViewBag.DepartamentosDicionario[departamento])
                                    <input type="hidden" name="FluxoDepartamentos" value="@(departamento)"/>
                                </td>
                                <td><a href="javascript:void(0)" onclick="ShiftUp(this)"><i class="icon-chevron-up"></i></a></td>
                                <td><a href="javascript:void(0)" onclick="ShiftDown(this)"><i class="icon-chevron-down"></i></a></td>
                                <td><a href="javascript:void(0)" onclick="Delete(this)"><i class="icon-remove"></i></a></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
</fieldset>
<script>
    $(document).ready(function() {
        $('#btn-add').on('click', function () {
            
            var departamentoId = $('#DepartamentoProducao').val();
            var departamento = $('#DepartamentoProducao option:selected').text();

            // Verificar se já está na lista
            var cadastrado = false;
            $('input[name=FluxoDepartamentos]').each(function () {
                if ( $(this).val() == departamentoId) {
                    alert("O departamento escolhido já está cadastrado.");
                    cadastrado = true;
                    return;
                }
            });

            if (cadastrado == false) {
                $('#table-grade tbody').append(
                    '<tr>\
                    <td>' + departamento + '<input type="hidden" name="FluxoDepartamentos" value="' + departamentoId + '"/></td>\
                    <td><a href="javascript:void(0)" onclick="ShiftUp(this)"><i class="icon-chevron-up"></i></a></td>\
                    <td><a href="javascript:void(0)" onclick="ShiftDown(this)"><i class="icon-chevron-down"></i></a></td>\
                    <td><a href="javascript:void(0)" onclick="Delete(this)"><i class="icon-remove"></i></a></td>\
                </tr>');
            }
        });
    });

    function ShiftUp(a) {
        var row = $(a).parents('tr:first');
        row.fadeTo('fast', 0.5, function () {
            row.insertBefore(row.prev());
            row.fadeTo('fast', 1.0);
        });
    }
    
    function ShiftDown(a) {
        var row = $(a).parents('tr:first');
        row.fadeTo('fast', 0.5, function () {
            row.insertAfter(row.next());
            row.fadeTo('fast', 1.0);
        });
    }
    
    function Delete(a) {
        var row = $(a).parents('tr:first');
        row.fadeTo('fast', 0, function () {
            row.remove();
        });
    }
</script>