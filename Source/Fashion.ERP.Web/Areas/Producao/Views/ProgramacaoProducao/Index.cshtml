@using Fashion.ERP.Domain.Producao
@using Fashion.ERP.Web.Areas.Producao.Models
@model PesquisaProgramacaoProducaoModel

@section javascript{@Scripts.Render(Links.Bundles.Scripts.PdfObject)}

<div class="well well-small">
    @Html.ActionLinkAuth("Novo", MVC.Producao.ProgramacaoProducao.Novo(), new { @class = "btn btn-primary" })
</div>
@Html.ValidationSummaryEx()
@using (Html.BeginForm(MVC.Producao.ProgramacaoProducao.Index(), FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <div class="accordion" id="accordion2">
        <div class="accordion-group">
            <div class="accordion-heading">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapsePesquisar">Pesquisar
                </a>
            </div>
            <div id="collapsePesquisar" class="accordion-body collapse">
                <div class="accordion-inner">
                    <div class="row">
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Colecao, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.DropDownList("Colecao", null, "-- Selecione --", new { @class = "input-large" })
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.DataCadastro, new { @class = "control-label"})
                                <div class="controls">
                                    @(Html.Kendo().DatePickerFor(x => x.DataCadastro))
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.Label("DataCadastroAte", "Até", new { @class = "control-label"})
                                <div class="controls">
                                    @(Html.Kendo().DatePickerFor(x => x.DataCadastroAte))
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Tag, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Tag, new { @class = "input-small" })/
                                    @Html.TextBoxFor(x => x.Ano, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.DataProgramada, new { @class = "control-label"})
                                <div class="controls">
                                    @(Html.Kendo().DatePickerFor(x => x.DataProgramada))
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.Label("DataProgramadaAte", "Até", new { @class = "control-label"})
                                <div class="controls">
                                    @(Html.Kendo().DatePickerFor(x => x.DataProgramadaAte))
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Referencia, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Referencia, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Lote, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Lote, new { @class = "input-small numeric-only" })/
                                    @Html.TextBoxFor(x => x.AnoLote, new { @class = "input-small numeric-only" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.SituacaoProgramacaoProducao)
                                <div class="controls">
                                    @Html.DropDownListFor(x => x.SituacaoProgramacaoProducao, Model.SituacaoProgramacaoProducao.ToSelectList(), "-- Selecione --")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="well">
                        <div class="row">
                            <div class="span3">
                                @Html.HiddenFor(x => x.ModoConsulta)
                                <div class="btn-group" data-toggle="buttons-radio">
                                    <button name="btn-ModoConsulta" class="btn btn-info active" type="button" value="listagem">Listagem</button>
                                    <button name="btn-ModoConsulta" class="btn btn-info" type="button" value="impressao">Impressão</button>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="span10">
                                <div id="row-imprimir" style="display: none">
                                    <div class="span3">
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            @Html.LabelForRequired(x => x.OrdenarPor, new { @class = "control-label " })
                                            <div class="controls">
                                                @Html.DropDownList("OrdenarPor", "--Selecione--")
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            @Html.LabelForRequired(x => x.OrdenarEm, new { @class = "control-label " })
                                            <div class="controls">
                                                <select name="OrdenarEm">
                                                    <option value="asc">Ascendente</option>
                                                    <option value="desc">Descendente</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="span3">
                                <button id="pesquisar-relatorio" class="btn btn-info pull-right" type="button" data-loading-text="Aguarde..." style="display: none;">Pesquisar</button>
                                <button id="pesquisar-grid-ajax" class="btn btn-info pull-right" type="submit" data-loading-text="Aguarde...">Pesquisar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div id="pdf"></div>

@(Html.Kendo().Grid<GridProgramacaoProducaoModel>()
    .Name("Grid")    
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(true)
        .PageSize(15)
        .Read(read => read.Action("ObtenhaListaGridModel", "ProgramacaoProducao").Data("ObtenhaModelJsonObject"))
        .Events(events => events.Error("onKendoGridError"))
    )
    .Columns(columns =>
    {
        columns.Bound(x => x.LoteAno);
        columns.Bound(x => x.Colecao);
        columns.Bound(x => x.DataProgramada).Format("{0:dd/MM/yyyy}");
        columns.Bound(x => x.Responsavel);
		columns.Bound(x => x.QtdeFichasTecnicas);
        columns.Bound(x => x.QtdeProgramada);
        columns.Bound(x => x.SituacaoProgramacaoProducao).Template(s => s.SituacaoProgramacaoProducao.EnumToString());
        columns.Template(@<text></text>).ClientTemplate(@Html.ActionLinkAuth("Editar", "Editar", "ProgramacaoProducao", new {Id = "#= Id #", Area = "Producao"}, new {@class = "btn btn-primary"}).ToHtmlString()).Width(80).Title("");               
        columns.Template(@<text></text>).ClientTemplate(@Html.ActionLinkAuth("Materiais", "MateriaisProgramacaoProducao", "ProgramacaoProducao", new {Id = "#= Id #", Area = "Producao"}, new {@class = "btn btn-primary"}).ToHtmlString()).Width(80).Title("");               
        columns.Template(@<text></text>).ClientTemplate(@Html.ActionLinkAuth("Requisições", "ProgramacaoProducaoRequisicao", "ProgramacaoProducao", new {Id = "#= Id #", Area = "Producao"}, new {@class = "btn btn-primary"}).ToHtmlString()).Width(80).Title("");               
        columns.Template(@<text></text>).ClientTemplate(@Html.ActionLinkAuth("Imprimir", "Imprimir", "RelatorioProgramacaoProducao", new {Id = "#= Id #", Area = "Producao"}, new {@class = "btn btn-primary", target = "_blank"}).ToHtmlString()).Width(80).Title("");  
    })
    .Resizable(resize => resize.Columns(true))
    .Reorderable(reorder => reorder.Columns(true))
    .Pageable()
    .Sortable()
    .Groupable()   
    )

<script>


</script>
@{
    Html.RenderAction("Pesquisar", "Fornecedor", new { area = "Comum" });
}