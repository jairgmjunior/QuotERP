@model Fashion.ERP.Web.Areas.Comum.Models.OperacaoProducaoModel
<div class="row">
    <div class="span6">
        <div class="control-group">
            @Html.LabelForRequired(x => x.Descricao)
            <div class="controls">
                @Html.EditorFor(x => x.Descricao)
                @Html.ValidationMessageFor(x => x.Descricao, null, new { @class = "help-block" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelForRequired(x => x.Tempo)
            <div class="controls">
                @Html.EditorFor(x => x.Tempo, "numeric")
                @Html.ValidationMessageFor(x => x.Tempo, null, new { @class = "help-block" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelForRequired(x => x.Custo)
            <div class="controls">
                @Html.EditorFor(x => x.Custo)
                @Html.ValidationMessageFor(x => x.Custo, null, new { @class = "help-block" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelForRequired(x => x.DepartamentoProducao)
            <div class="controls">
                @Html.DropDownList("DepartamentoProducao", null, "-- Selecione --", new {@class = "input-large"})
                @Html.ValidationMessageFor(x => x.DepartamentoProducao, null, new { @class = "help-block" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelForRequired(x => x.SetorProducao)
            <div class="controls">
                @Html.DropDownList("SetorProducao", null, "-- Selecione --", new {@class = "input-large"})
                @Html.ValidationMessageFor(x => x.SetorProducao, null, new { @class = "help-block" })
            </div>
        </div>
        <div class="control-group">
            @Html.LabelForRequired(x => x.PesoProdutividade)
            <div class="controls">
                @Html.EditorFor(x => x.PesoProdutividade)
                @Html.ValidationMessageFor(x => x.PesoProdutividade, null, new { @class = "help-block" })
            </div>
        </div>
        
    </div>
    <div class="span6">
        <div class="well">
            @(Html.TreeView(Model.TreeView)
                .EmptyContent("Não há operações dos setores cadastradas.")
                .Children(m => m.Itens)
                .HtmlAttributes(new { id = "treeview" })
                .ChildrenHtmlAttributes(new { @class = "subItem" })
                .ItemText(m => m.Name)
                .ItemTemplate(
                @<text>
                    @if (item.IsChecked)
                    {
                        <span id="item-selected">@item.Name</span>
                    }
                    else
                    {
                        <span>@item.Name</span>
                    }
                </text>
                ))
        </div>
    </div>
</div>
<script>
    $(document).ready(function () {

        var treeview = $("#treeview").kendoTreeView({
        }).data("kendoTreeView");

        treeview.expand(".k-item");
        
        var selectedItem = $('#item-selected').closest('.k-item');
        treeview.select(selectedItem);
        
        // Preenche o combo de setor de produção de acordo com o departamento escolhido
        $(document).on('change', '#DepartamentoProducao', function () {
            var setores = $('#SetorProducao');
            setores.empty();
            
            var url = '/Comum/SetorProducao/SetoresDepartamento_?IdDepartamento=' + $(this).val();
            $.getJSON(url, function (result) {
                $.each(result, function (index, item) {
                    setores.append($('<option />').val(item.Id).text(item.Nome));
                });
            }).fail(function (jqXhr, textStatus, errorThrown) {
                alert(errorThrown);
            });
        });
    });
</script>
