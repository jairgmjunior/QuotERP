@model Fashion.ERP.Web.Areas.Comum.Models.NovoUsuarioModel

@using (Html.BeginForm("Novo", "Usuario", FormMethod.Post, new { id = "form", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummaryEx()
    @Html.HiddenFor(x => x.Id)

    <fieldset>
        <legend><small>Dados do Usuário</small></legend>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Nome)
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        @Html.TextBoxFor(x => x.Nome, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Nome, null, new { @class="help-block" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Login)
                    <div class='col-sm-8 col-md-8 col-lg-7'>
                        @Html.TextBoxFor(x => x.Login, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Login, null, new { @class="help-block" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Senha)
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        @Html.PasswordFor(x => x.Senha, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Senha, null, new { @class="help-block" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.ConfirmarSenha)
                    <div class='col-sm-8 col-md-8 col-lg-7'>
                        @Html.TextBoxFor(x => x.ConfirmarSenha, new { @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.ConfirmarSenha, null, new { @class="help-block" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Funcionario)
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        @Html.DropDownListFor(x => x.Funcionario, null, "-- Selecione --", new {@class = "form-control"})
                        @Html.ValidationMessageFor(x => x.Funcionario, null, new { @class="help-block" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.PerfisDeAcesso)
                    <div class='col-sm-8 col-md-8 col-lg-7'>
                        @Html.CheckBoxListFor(x => x.PerfisDeAcesso, Model.PerfisDeAcessoList, new { @class = "checkbox" })
                        @Html.ValidationMessageFor(x => x.PerfisDeAcesso, null, new { @class="help-block" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Permissoes)
                    <div class='col-sm-8 col-md-8 col-lg-7'>
                        @(Html.TreeView(Model.PermissoesList)
                              .EmptyContent("Não há permissões!")
                              .Children(m => m.Itens)
                              .HtmlAttributes(new { id = "treeview" })
                              .ChildrenHtmlAttributes(new { @class = "subItem" })
                              .ItemText(m => m.Name)
                              .ItemTemplate(
                                    @<text>
                                        <input type="checkbox" value="@item.Id" @(item.IsChecked ? "checked='ckecked'" : string.Empty) name="Permissoes"/>@item.Name
                                    </text>))
                        @Html.ValidationMessageFor(x => x.Permissoes, null, new { @class = "help-block" })
                    </div>
                </div>
            </div>
        </div>     
    </fieldset>

    @Html.FormActionAuth(this.IsEditar(), MVC.Comum.Usuario.Excluir(Model.Id))

    <script>
        $(document).ready(function () {
            $("#treeview").kendoTreeView({
                checkboxes: {
                    checkChildren: true,
                }
            }).data("kendoTreeView");
        });
    </script>
}