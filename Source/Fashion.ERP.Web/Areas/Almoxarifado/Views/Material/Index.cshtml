@using Fashion.ERP.Web.Areas.Almoxarifado.Models
@model Fashion.ERP.Web.Areas.Almoxarifado.Models.PesquisaMaterialModel

@section javascript{@Scripts.Render(Links.Bundles.Scripts.PdfObject)}

<div class="well well-small">
    @Html.ActionLinkAuth("Novo", MVC.Almoxarifado.Material.Novo(), new { @class = "btn btn-primary" })
</div>
@Html.ValidationSummaryEx()
@using (Html.BeginForm(MVC.Almoxarifado.Material.Index(), FormMethod.Post, new { @class = "form-horizontal small-labels" }))
{
    @Html.AntiForgeryToken()
    <div class="accordion" id="accordion2">
        <div class="accordion-group">
            <div class="accordion-heading">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapsePesquisar">Pesquisar
                </a>
            </div>
            <div id="collapsePesquisar" class="accordion-body collapse">
                <div class="accordion-inner">
                    <div class="row">
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Referencia, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Referencia, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Descricao)
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Descricao, new { @class = "input-xlarge" })
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Ativo)
                                <div class="controls">
                                    @Html.EditorFor(x => x.Ativo)
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.CodigoBarra, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.CodigoBarra, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Ncm)
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Ncm, new { @class = "input-medium" })
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Localizacao)
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Localizacao, new { @class = "input-medium" })
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.OrigemSituacaoTributaria)
                                <div class="controls">
                                    @Html.DropDownList("OrigemSituacaoTributaria", null, "-- Selecione --", new { @class = "input-xlarge" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Familia)
                                <div class="controls">
                                    @Html.DropDownList("Familia", "-- Selecione --")
                                </div>
                            </div>
                        </div>
                        <div class="span4">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.TipoItem)
                                <div class="controls">
                                    @Html.DropDownList("TipoItem", null, "-- Selecione --", new { @class = "input-large" })
                                </div>
                            </div>
                        </div>
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.GeneroFiscal)
                                <div class="controls">
                                    @Html.DropDownList("GeneroFiscal", null, "-- Selecione --", new { @class = "input-xlarge" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.UnidadeMedida)
                                <div class="controls">
                                    @Html.DropDownList("UnidadeMedida", "-- Selecione --")
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.MarcaMaterial)
                                <div class="controls">
                                    @Html.DropDownList("MarcaMaterial", "-- Selecione --")
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Categoria)
                                <div class="controls">
                                    @Html.DropDownList("Categoria", "-- Selecione --")
                                </div>
                            </div>
                        </div>

                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Subcategoria)
                                <div class="controls">
                                    @Html.DropDownList("Subcategoria", "-- Selecione --")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="well">
                        <div class="row">
                            <div class="span3">
                                @Html.HiddenFor(x => x.ModoConsulta)
                                <div class="btn-group" data-toggle="buttons-radio">
                                    <button name="btn-ModoConsulta" class="btn btn-info active" type="button" value="listagem">Listagem</button>
                                    <button name="btn-ModoConsulta" class="btn btn-info" type="button" value="impressao">Impressão</button>
                                </div>
                            </div>
                        </div>
                        <br />

                        <div class="row">
                            <div class="span10">
                                <div id="row-imprimir" style="display: none">
                                    <div class="span6">
                                        <div class="span3">
                                            <div class="control-group">
                                                @Html.LabelForRequired(x => x.TipoRelatorio, new { @class = "control-label " })
                                                <div class="controls">
                                                    @Html.DropDownList("TipoRelatorio")
                                                </div>
                                            </div>
                                        </div>
                                        <div class="control-group">
                                            @Html.LabelForRequired(x => x.AgruparPor)
                                            <div class="controls">
                                                @Html.DropDownList("AgruparPor", "--Selecione--")
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            @Html.LabelForRequired(x => x.OrdenarPor, new { @class = "control-label " })
                                            <div class="controls">
                                                @Html.DropDownList("OrdenarPor", "--Selecione--")
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            @Html.LabelForRequired(x => x.OrdenarEm, new { @class = "control-label " })
                                            <div class="controls">
                                                <select name="OrdenarEm">
                                                    <option value="asc">Ascendente</option>
                                                    <option value="desc">Descendente</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="span3">
                                <button id="pesquisar-relatorio" class="btn btn-info pull-right" type="button" data-loading-text="Aguarde..." style="display: none;">Pesquisar</button>
                                <button id="pesquisar-grid-ajax" class="btn btn-info pull-right" type="submit" data-loading-text="Aguarde...">Pesquisar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div id="pdf"></div>
@(Html.Kendo().Grid<GridMaterialModel>()
    .Name("Grid")    
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(true)
        .PageSize(15)
        .Read(read => read.Action("ObtenhaListaGridModel", "Material").Data("ObtenhaModelJsonObject"))
        .Events(events => events.Error("onKendoGridError"))
    )
    .Columns(columns =>
    {
        columns.Bound(x => x.Referencia);
        columns.Bound(x => x.Descricao);
        columns.Bound(x => x.MarcaMaterial);
        columns.Bound(x => x.Categoria);
        columns.Bound(x => x.Subcategoria);
        columns.Bound(x => x.Familia);
        columns.Bound(x => x.UnidadeMedida);
        columns.Bound(x => x.Foto).ClientTemplate( "#if(Foto != null  && Foto != '') {#" + 
            "<img src='" + "#= Foto #" + "' class='img-rounded' style='width: 48px; height: 48px;'/>" + 
                "#}#").Width(60).Sortable(false);
        columns.Template(@<text></text>).ClientTemplate(@Html.ActionLinkAuth("Editar", "Editar", "Material", new {Id = "#= Id #", Area = "Almoxarifado"}, new {@class = "btn btn-primary"}).ToHtmlString()).Width(80).Title("");               
        columns.Template(@<text></text>).ClientTemplate( "#if(Ativo) {#" + 
            @Html.ActionLinkAuth("Inativar", "EditarSituacao", "Material", new {Id = "#= Id #", Area = "Almoxarifado"}, new {@class = "btn btn-small btn-danger btn-editar-situacao"}).ToHtmlString() +
        "#} else {#" +
            @Html.ActionLinkAuth("Ativar", "EditarSituacao", "Material", new {Id = "#= Id #", Area = "Almoxarifado"}, new {@class = "btn btn-small btn-success btn-editar-situacao"}).ToHtmlString() +
        "#}#").Width(60);
    })
    .Resizable(resize => resize.Columns(true))
    .Reorderable(reorder => reorder.Columns(true))
    .Pageable()
    .Sortable()
    .Groupable()   
    )

<script>
    $(function () {

        // Seleciona o modo de consulta
        $('button[name=btn-ModoConsulta]').on('click', function () {

            var $ModoConsulta = $('#ModoConsulta');

            if (this.value == 'impressao') {
                $ModoConsulta.val('Imprimir');

                $('#row-imprimir').show();
                $('#pesquisar-relatorio').show();
                $('#pesquisar-grid').hide();

            } else {
                $ModoConsulta.val('Listar');
                $("#pdf").html("");
                $("#pdf").attr("style", "");
                $("#Grid").show();
                $('#row-imprimir').hide();
                $('#pesquisar-relatorio').hide();
                $('#pesquisar-grid').show();
            }
        });
        
        // Redefine o modo do agrupamento
        $('#TipoRelatorio').on("change", function() {
            var $this = $(this);
            var $AgruparPor = $('#AgruparPor');
            var hasDefaultOption = $('#AgruparPor option:first').val() == '';
            
            switch($this.val()) {
                case 'Detalhado':
                    $AgruparPor.attr('disabled', 'disabled');
                    break;
                case 'Listagem':
                    $AgruparPor.removeAttr('disabled');
                    
                    if (!hasDefaultOption) {
                        var option = $AgruparPor.prepend($('<option />'));
                        $AgruparPor.val(option);
                    }
                    break;
                case 'Sintético':
                    $AgruparPor.removeAttr('disabled');
                    
                    if (hasDefaultOption) {
                        $('#AgruparPor option:first').remove();
                    }
                    break;
            }
        });
        
        // Preenche o combo de subcategoria de acordo com a categoria escolhida
        $('#Categoria').on("change", function () {
            var subcategoria = $('#Subcategoria');
            subcategoria.empty();
            subcategoria.append($('<option />').text("-- Selecione --"));

            var idCategoria = $(this).val();
            if (idCategoria) {
                var url = '/Almoxarifado/Subcategoria/Subcategorias/' + idCategoria;
                $.getJSON(url, function (result) {
                    $.each(result, function (index, item) {
                        subcategoria.append($('<option />').val(item.Id).text(item.Nome));
                    });
                }).fail(function (jqXhr, textStatus, errorThrown) {
                    alert(errorThrown);
                });
            }
        });
    })
</script>
