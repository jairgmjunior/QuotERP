@model Fashion.ERP.Web.Areas.Almoxarifado.Models.SaidaMaterialModel

<fieldset>
    <legend><small>Dados da Saída</small></legend>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                @Html.LabelForRequired(x => x.DataSaida)
                <div class="col-sm-8 col-md-8 col-lg-7">
                    @Html.EditorFor(x => x.DataSaida, null, new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.DataSaida, null, new { @class="help-block" })
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                @Html.LabelForRequired(x => x.UnidadeOrigem)
                <div class='col-sm-8 col-md-8 col-lg-7 @(ViewContext.RouteData.GetRequiredString("action") == "Editar" ? "naoeditavel" : "" )'>
                    @Html.DropDownList("UnidadeOrigem", null, "-- Selecione --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.UnidadeOrigem, null, new { @class="help-block" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                @Html.LabelForRequired(x => x.DepositoMaterialOrigem)
                <div class='col-sm-8 col-md-8 col-lg-7 @(ViewContext.RouteData.GetRequiredString("action") == "Editar" ? "naoeditavel" : "" )'>
                    @Html.DropDownList("DepositoMaterialOrigem", null, "-- Selecione --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.DepositoMaterialOrigem, null, new { @class="help-block" })
                </div>
            </div>
        </div>
    </div>
</fieldset>

<fieldset>
    <legend><small>Dados do Destino</small></legend>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                @Html.LabelForRequired(x => x.CentroCusto)
                <div class="col-sm-8 col-md-8 col-lg-7  ">
                    @Html.HiddenFor(x => x.CentroCusto)
                    <div class="col-lg-3 col-sm-5 col-md-4 padding0">
                        <div class="input-group">
                            <input id="codigo-centrocusto" class="numeric-only form-control" type="text" style="width: 70%;">
                            <span class="input-group-btn pull-left">
                                <button id="pesquisar-centrocusto" class="btn btn-default btn-sm " type="button" data-toggle="modal" data-target="#modal-centrocusto">
                                    <span class="glyphicon glyphicon-search"></span>
                                </button>
                            </span>
                        </div>
                    </div>
                    <div class="col-lg-9 col-md-8 col-sm-12 padding0">
                        <input id="nome-centrocusto" class="form-control" readonly="" data-toggle="tooltip">
                    </div>
                </div>
            </div>
        </div>     
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                @Html.LabelForRequired(x => x.UnidadeDestino)
                <div class='col-sm-8 col-md-8 col-lg-7'>
                    @Html.DropDownList("UnidadeDestino", null, "-- Selecione --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.UnidadeDestino, null, new { @class="help-block" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                @Html.LabelForRequired(x => x.DepositoMaterialDestino)
                <div class='col-sm-8 col-md-8 col-lg-7'>
                    @Html.DropDownList("DepositoMaterialDestino", null, "-- Selecione --", new { @class = "form-control" })
                    @Html.ValidationMessageFor(x => x.DepositoMaterialDestino, null, new { @class="help-block" })
                </div>
            </div>
        </div>
    </div>
</fieldset>

<fieldset>
    <legend><small>Itens da Saída</small></legend>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                @Html.Label("Material", "Material", new { @class = "control-label col-sm-4 col-md-3" })
                <div class="col-sm-8 col-md-8 col-lg-7">
                    @Html.Hidden("Material")
                    <div class="col-lg-3 col-sm-5 col-md-4 padding0">
                        <div class="input-group">
                            <input id="referencia-material" class="numeric-only form-control" type="text" style="width: 70%;">
                            <span class="input-group-btn pull-left">
                                <button id="pesquisar-material" class="btn btn-default btn-sm " type="button" data-toggle="modal" data-target="#modal-material">
                                    <span class="glyphicon glyphicon-search"></span>
                                </button>
                            </span>
                        </div>
                    </div>
                    <div class="col-lg-9 col-md-8 col-sm-12 padding0">
                        <input id="descricao-material" class="form-control" readonly="" data-toggle="tooltip">
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                @Html.Label("UnidadeMaterial", "Unidade do Material", new { @class = "control-label col-sm-4 col-md-3" })
                <div class="col-sm-3 col-lg-2">
                    <input id="sigla" type="text" class="form-control" disabled="disabled"/>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                @Html.Label("Quantidade", "Qtd. de Saída", new { @class = "control-label col-sm-4 col-md-3"})
                <div class="col-sm-8 col-md-8 col-lg-7">
                    @(Html.Kendo().NumericTextBox()
                          .Name("Quantidade")
                          .Format("n4").Decimals(4)
                          .Min(0)
                          .HtmlAttributes(new { @class = "numeric " }))
                    @Html.ValidationMessage("Quantidade", new { @class="help-block" })
                </div>
            </div>
        </div>
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                @Html.Label("QuantidadeEstoque", "Qtde. Estoque", new { @class = "control-label col-sm-4 col-md-3"})
                <div class="col-sm-8 col-md-8 col-lg-7">
                    <input id="quantidadeEstoque" class="form-control" type="text" disabled="disabled"/>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                <div class="col-sm-4 col-md-3"></div>
                <div class="col-sm-8 col-md-8 col-lg-7">
                    <button id="btn-add" class="btn btn-default btn-sm" type="button">
                        <span class="glyphicon glyphicon-plus"></span>
                    </button>
                </div>   
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                <div class="col-sm-2 col-md-3"></div>    
                <div class="col-sm-offset-2 col-md-offset-3 col-sm-8 col-md-9">
                    <table id="table-sequencia" class="table table-striped" style="width: 800px">
                        <thead>
                            <tr>
                                <th>Referência</th>
                                <th>Descrição</th>
                                <th>Quantidade</th>
                                <th>Und.</th>
                                <th style="width: 16px"></th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.Materiais != null)
                            {
                                for (int i = 0; i < Model.Materiais.Count; i++)
                                {
                                    var entradaItem = Model.SaidaItemMateriais[i];
                                    var material = Model.Materiais[i];
                                    var quantidade = Model.Quantidades[i];

                                    <tr>
                                        <td>
                                            @ViewBag.MaterialReferenciasDicionario[material]
                                            <input type="hidden" name="Materiais" value="@material"/>
                                            <input type="hidden" name="SaidaItemMateriais" value="@entradaItem"/>
                                        </td>
                                        <td>
                                            @ViewBag.MaterialDescricoesDicionario[material]
                                        </td>
                                        <td>
                                            @quantidade.ToString("N4")
                                            <input type="hidden" name="Quantidades" value="@quantidade"/>
                                        </td>
                                        <td>
                                            @ViewBag.MaterialUnidadesMedidaDicionario[material]
                                        </td>
                                        <td><a href="javascript:void(0)" onclick="Delete(this)"><i class="icon-remove"></i></a></td>
                                    </tr>
                                }
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>    
</fieldset>
    @if (@Model.PermiteAlterar)
    {
        @Html.FormActionAuth(this.IsEditar(), MVC.Almoxarifado.SaidaMaterial.Excluir(Model.Id))   
    }
    else
    {
        <br/>
        <div class="row">
            <div class="alert alert-info">
                Não é possível alterar uma saída de material criada pela baixa de uma requisição de material.
            </div>
        </div>
    }


<script>
    $(document).ready(function () {
        if ($('#DepositoMaterialOrigem').val() == '') {
            $("#referencia-material").prop("disabled", true);
            $("#pesquisar-material").prop("disabled", true);
        }

        $(function () {
            $('#DepositoMaterialOrigem').on("change", function () {

                if ($('#DepositoMaterialOrigem').val() == '') {
                    $("#referencia-material").prop("disabled", true);
                    $("#pesquisar-material").prop("disabled", true);
                } else {
                    $("#referencia-material").prop("disabled", false);
                    $("#pesquisar-material").prop("disabled", false);
                }
            });
        });
    });

    $(function () {
        $('#UnidadeDestino').on("change", function () {

            // Preenche o combo de subcategoria de acordo com a categoria escolhida
            var depositoMaterialDestino = $('#DepositoMaterialDestino');
            depositoMaterialDestino.empty();
            depositoMaterialDestino.append($('<option />').text('-- Selecione --').val(''));

            var unidadeDestinoId = $(this).val();
            if (unidadeDestinoId != '') {
                var url = '/Almoxarifado/DepositoMaterial/DepositosPorUnidade/' + unidadeDestinoId;
                $.getJSON(url, function (result) {
                    $.each(result, function (index, item) {
                        var option = $('<option />').val(item.Id).text(item.Nome);
                        depositoMaterialDestino.append(option);
                    });
                }).fail(function (jqXhr, textStatus, errorThrown) {
                    alert(errorThrown);
                });
            }
        });

        $('#UnidadeOrigem').on("change", function () {

            // Preenche o combo de subcategoria de acordo com a categoria escolhida
            var depositoMaterialOrigem = $('#DepositoMaterialOrigem');
            depositoMaterialOrigem.empty();
            depositoMaterialOrigem.append($('<option />').text('-- Selecione --').val(''));

            var unidadeOrigemId = $(this).val();
            if (unidadeOrigemId != '') {
                var url = '/Almoxarifado/DepositoMaterial/DepositosPorUnidade/' + unidadeOrigemId;
                $.getJSON(url, function (result) {
                    $.each(result, function (index, item) {
                        var option = $('<option />').val(item.Id).text(item.Nome);
                        depositoMaterialOrigem.append(option);
                    });
                }).fail(function (jqXhr, textStatus, errorThrown) {
                    alert(errorThrown);
                });
            }
        });

        $('#Material').on("change", function () {
            var url = '/Almoxarifado/Material/UnidadeMedida/' + this.value;
            $.getJSON(url, function (result) {
                $('#sigla').val(result.Sigla);
            });

            url = '/Almoxarifado/Material/QuantidadeEstoque?id=' + this.value + "&depositoId=" + $("#DepositoMaterialOrigem").val();
            $.getJSON(url, function (result) {
                $('#quantidadeEstoque').val(result);
            });
        });

        $('#btn-add').on('click', function () {

            var materialId = $('#Material').val();
            var referencia = $('#referencia-material').val();
            var descricao = $('#descricao-material').val();
            var quantidade = $('#Quantidade').val();
            var unidadeMedida = $('#sigla').val();

            // Validar
            if (materialId == '') {
                $('#Material').addClass('input-validation-error');
                alert('Selecione uma referência');
                return;
            }

            // Verifica se já existe material com o mesmo id na grid
            var valorMaterial = $("#Material").val();
            if ($("input[name=Materiais][value=" + valorMaterial + "]").get(0) != null) {
                alert('Material já selecionado.');
                return;
            }

            $('#table-sequencia tbody').append(
                '<tr>\
                    <td>' + referencia + '<input type="hidden" name="Materiais" value="' + materialId + '"/><input type="hidden" name="SaidaItemMateriais" /></td>\
                    <td>' + descricao + '</td>\
                    <td>' + quantidade + '<input type="hidden" name="Quantidades" value="' + quantidade + '"/></td>\
                    <td>' + unidadeMedida + '</td>\
                    <td><a href="javascript:void(0)" onclick="Delete(this)"><i class="icon-remove"></i></a></td>\
                </tr>'
            );

            // limpar formulário
            $('#referencia-material').val('');
            $('#Material').val('');
            $('#descricao-material').val('');
            $('#Quantidade').data("kendoNumericTextBox").value(0);
            $('#quantidadeEstoque').val('');
            $('#sigla').val('');
        });
    });

    function Delete(a) {
        var row = $(a).parents('tr:first');
        row.fadeTo('fast', 0, function () {
            row.remove();
        });
    }
</script>
