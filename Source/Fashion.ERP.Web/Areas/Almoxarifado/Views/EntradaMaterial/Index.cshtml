@using Fashion.ERP.Web.Areas.Almoxarifado.Models
@model PesquisaEntradaMaterialModel

@section javascript{@Scripts.Render(Links.Bundles.Scripts.PdfObject)}

<div class="well well-small">
    @Html.ActionLinkAuth("Novo", MVC.Almoxarifado.EntradaMaterial.Novo(), new { @class = "btn btn-primary" })
</div>
@Html.ValidationSummaryEx()
@using (Html.BeginForm(MVC.Almoxarifado.EntradaMaterial.Index(), FormMethod.Post, new { @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    <div class="accordion" id="accordion2">
        <div class="accordion-group">
            <div class="accordion-heading">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapsePesquisar">Pesquisar
                </a>
            </div>
            <div id="collapsePesquisar" class="accordion-body collapse">
                <div class="accordion-inner">
                    <div class="row">
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.UnidadeDestino, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.DropDownList("UnidadeDestino", null, "-- Selecione --", new { @class = "input-large" })
                                </div>
                            </div>
                        </div>
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.DepositoMaterialDestino)
                                <div class="controls">
                                    @Html.DropDownList("DepositoMaterialDestino", null, "-- Selecione --", new { @class = "input-large" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Fornecedor)
                                <div class="controls">
                                    <div class="input-append">
                                        @Html.HiddenFor(x => x.Fornecedor)
                                        <input id="codigo-fornecedor" class="input-small numeric-only" type="text" />
                                        <button id="pesquisar-fornecedor" class="btn" type="button"><i class="icon-search"></i></button>
                                        <span id="descricao-fornecedor" class="add-on"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.UnidadeOrigem)
                                <div class="controls">
                                    @Html.DropDownList("UnidadeOrigem", null, "-- Selecione --", new { @class = "input-large" })
                                </div>
                            </div>
                        </div>
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.DepositoMaterialOrigem)
                                <div class="controls">
                                    @Html.DropDownList("DepositoMaterialOrigem", null, "-- Selecione --", new { @class = "input-large" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span5">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Referencia, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Referencia, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.DataEntradaDe, new { @class = "control-label"})
                                <div class="controls">
                                    @(Html.Kendo().DatePickerFor(x => x.DataEntradaDe))
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.Label("VencimentoAte", "Até", new { @class = "control-label"})
                                <div class="controls">
                                    @(Html.Kendo().DatePickerFor(x => x.DataEntradaAte))
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.ReferenciaExterna)
                                <div class="controls">
                                    @Html.EditorFor(x => x.ReferenciaExterna, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="well">
                        <div class="row">
                            <div class="span4">
                                @Html.HiddenFor(x => x.ModoConsulta)
                                <div class="btn-group" data-toggle="buttons-radio">
                                    <button name="btn-ModoConsulta" class="btn btn-info active" type="button" value="listagem">Listagem</button>
                                    <button name="btn-ModoConsulta" class="btn btn-info" type="button" value="impressao">Impressão</button>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="span10">
                                <div id="row-imprimir" style="display: none">
                                    <div class="span3">
                                        <div class="control-group">
                                            @Html.LabelForRequired(x => x.AgruparPor)
                                            <div class="controls">
                                                @Html.DropDownList("AgruparPor", "--Selecione--")
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            @Html.LabelForRequired(x => x.OrdenarPor, new { @class = "control-label " })
                                            <div class="controls">
                                                @Html.DropDownList("OrdenarPor", "--Selecione--")
                                            </div>
                                        </div>
                                    </div>
                                    <div class="span3">
                                        <div class="control-group">
                                            @Html.LabelForRequired(x => x.OrdenarEm, new { @class = "control-label " })
                                            <div class="controls">
                                                <select name="OrdenarEm">
                                                    <option value="asc">Ascendente</option>
                                                    <option value="desc">Descendente</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="span3">
                                <button id="pesquisar-relatorio" class="btn btn-info pull-right" type="button" data-loading-text="Aguarde..." style="display: none;">Pesquisar</button>
                                <button id="pesquisar-grid" class="btn btn-info pull-right" type="submit" data-loading-text="Aguarde...">Pesquisar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div id="pdf"></div>

@(Html.Kendo().Grid<GridEntradaMaterialModel>()
    .Name("Grid")    
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(true)
        .PageSize(50)
        .Read(read => read.Action("ObtenhaListaGridModel", "EntradaMaterial").Data("ObtenhaPesquisaEntradaMaterialModel"))
        .Events(events => events.Error("onError"))
    )
    .Columns(columns =>
    {
        columns.Bound(x => x.DataEntrada).Format("{0:dd/MM/yyyy}");
        columns.Bound(x => x.UnidadeDestino);
        columns.Bound(x => x.DepositoMaterialDestino);
		columns.Bound(x => x.OrigemFornecedor).Sortable(false);
        columns.Template(@<text></text>).ClientTemplate(@Html.ActionLinkAuth("Editar", "Editar", "EntradaMaterial", new {Id = "#= Id #", Area = "Almoxarifado"}, new {@class = "btn btn-primary"}).ToHtmlString()).Width(80).Title("");               
    })
    .Resizable(resize => resize.Columns(true))
    .Reorderable(reorder => reorder.Columns(true))
    .Pageable()
    .Sortable()
    .Groupable()   
    )

<script>
    $(function() {
        $('#pesquisar-grid').on('click', function() {

            limpeMensagensAlerta();

            var $ModoConsulta = $('#ModoConsulta');

            if ($ModoConsulta.val() == 'Listar') {

                $('#Grid').data('kendoGrid').dataSource.read();
                $('#Grid').data('kendoGrid').refresh();
                $('#Grid').data('kendoGrid').dataSource.page(1);
                return false;
            }
        });

        // Seleciona o modo de consulta
        $('button[name=btn-ModoConsulta]').on('click', function() {

            var $ModoConsulta = $('#ModoConsulta');

            if (this.value == 'impressao') {
                $ModoConsulta.val('Imprimir');

                $('#row-imprimir').show();
                $('#pesquisar-relatorio').show();
                $('#pesquisar-grid').hide();

            } else {
                $ModoConsulta.val('Listar');
                $("#pdf").html("");
                $("#pdf").attr("style", "");
                $("#Grid").show();
                $('#row-imprimir').hide();
                $('#pesquisar-relatorio').hide();
                $('#pesquisar-grid').show();
            }
        });

        $('#UnidadeDestino').on("change", function() {

            // Preenche o combo de depósito de destino de acordo com a unidade escolhida
            var depositoMaterialDestino = $('#DepositoMaterialDestino');
            depositoMaterialDestino.empty();
            depositoMaterialDestino.append($('<option />').text('-- Selecione --').val(''));

            var unidadeDestinoId = $(this).val();
            if (unidadeDestinoId != '') {
                var url = '/Almoxarifado/DepositoMaterial/DepositosPorUnidade/' + unidadeDestinoId;
                $.getJSON(url, function(result) {
                    $.each(result, function(index, item) {
                        var option = $('<option />').val(item.Id).text(item.Nome);
                        depositoMaterialDestino.append(option);
                    });
                }).fail(function(jqXhr, textStatus, errorThrown) {
                    alert(errorThrown);
                });
            }
        });

        $('#UnidadeOrigem').on("change", function() {

            // Preenche o combo de depósito de origem de acordo com a unidade escolhida
            var depositoMaterialOrigem = $('#DepositoMaterialOrigem');
            depositoMaterialOrigem.empty();
            depositoMaterialOrigem.append($('<option />').text('-- Selecione --').val(''));

            var unidadeOrigemId = $(this).val();
            if (unidadeOrigemId != '') {
                var url = '/Almoxarifado/DepositoMaterial/DepositosPorUnidade/' + unidadeOrigemId;
                $.getJSON(url, function(result) {
                    $.each(result, function(index, item) {
                        var option = $('<option />').val(item.Id).text(item.Nome);
                        depositoMaterialOrigem.append(option);
                    });
                }).fail(function(jqXhr, textStatus, errorThrown) {
                    alert(errorThrown);
                });
            }
        });
    });

    function ObtenhaPesquisaEntradaMaterialModel() {
        var parametros = {
            model:
            {
                UnidadeDestino: $("#UnidadeDestino").val(),
                DepositoMaterialDestino: $("#DepositoMaterialDestino").val(),
                Fornecedor: $("#Fornecedor").val(),
                UnidadeOrigem: $("#UnidadeOrigem").val(),
                DepositoMaterialOrigem: $("#DepositoMaterialOrigem").val(),
                Referencia: $("#Referencia").val(),
                ReferenciaExterna: $("#ReferenciaExterna").val(),
                DataEntradaDe: $("#DataEntradaDe").val(),
                DataEntradaAte: $("#DataEntradaAte").val()
            }
        };

        return parametros;
    }

    function onError(e) {
        alert(e.errors);
    }

</script>
@{
    Html.RenderAction("Pesquisar", "Fornecedor", new { area = "Comum" });
}