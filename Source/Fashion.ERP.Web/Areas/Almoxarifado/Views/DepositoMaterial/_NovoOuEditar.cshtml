@model Fashion.ERP.Web.Areas.Almoxarifado.Models.DepositoMaterialModel

<div class="row">
    <div class="col-sm-6">
        <div class="form-group form-group-sm">
            @Html.LabelForRequired(x => x.Unidade)
            <div class="col-sm-8 col-md-8 col-lg-7">
                @Html.DropDownListFor(x => x.Unidade, null, "-- Selecione --", new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Unidade, null, new { @class = "help-block" })
            </div>
        </div>
        <div class="form-group form-group-sm">
            @Html.LabelForRequired(x => x.Nome)
            <div class="col-sm-8 col-md-8 col-lg-7">
                @Html.TextBoxFor(x => x.Nome, new { @class = "form-control" })
                @Html.ValidationMessageFor(x => x.Nome, null, new { @class = "help-block" })
            </div>
        </div>
        <div class="form-group form-group-sm">
            @Html.LabelForRequired(x => x.DataAbertura)
            <div class="col-sm-8 col-md-8 col-lg-7">
                @Html.EditorFor(x => x.DataAbertura)
                @Html.ValidationMessageFor(x => x.DataAbertura, null, new { @class = "help-block" })
            </div>
        </div>
        <div class="form-group form-group-sm">
            @Html.LabelForRequired(x => x.Funcionarios)
            <div class="col-sm-8 col-md-8 col-lg-7">
                <div class="input-group">
                    @Html.DropDownList("Funcionario", null,  "-- Selecione --", new { @class = "form-control"})
                    <span class="input-group-btn">
                        <button id="btn-add" class="btn btn-default btn-sm " type="button">
                            <span class="glyphicon glyphicon-plus"></span>
                        </button>
                    </span>
                </div>
                <table id="table-funcionario" class="table table-striped">
                    <tbody>
                        @if (Model.Funcionarios != null)
                        {
                            foreach (var funcionario in Model.Funcionarios)
                            {
                                <tr>
                                    <td>
                                        @(ViewBag.FuncionariosDicionario[funcionario])
                                        <input type="hidden" name="Funcionarios" value="@(funcionario)"/>
                                    </td>
                                    <td>
                                        <a href="javascript:void(0)" onclick="Delete(this)">
                                            <button id="btn-remove" class="btn btn-default btn-sm " type="button">
                                                <span class="glyphicon glyphicon-minus"></span>
                                            </button>
                                        </a>
                                    </td>
                                </tr>
                            }
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="well">
            @(Html.TreeView(Model.TreeView)
                  .EmptyContent("Não há depósito de materiais cadastrados.")
                  .Children(m => m.Itens)
                  .HtmlAttributes(new { id = "treeview" })
                  .ChildrenHtmlAttributes(new { @class = "subItem" })
                  .ItemText(m => m.Name)
                  .ItemTemplate(
                      @<text>
                           @if (item.IsChecked)
                           {
                               <span id="item-selected">@item.Name</span>
                           }
                           else
                           {
                               <span>@item.Name</span>
                           }
                       </text>
                  ))
        </div>
    </div>
</div>

@Html.FormActionAuth(this.IsEditar(), MVC.Almoxarifado.DepositoMaterial.Excluir(Model.Id))

<script>
    $(document).ready(function () {

        // Inicializar TreeView
        var treeview = $("#treeview").kendoTreeView({
        }).data("kendoTreeView");

        treeview.expand(".k-item");

        var selectedItem = $('#item-selected').closest('.k-item');
        treeview.select(selectedItem);
        
        // Adicionar um funcionário à lista
        $('#btn-add').on('click', function () {

            var funcionarioId = $('#Funcionario').val();
            var funcionario = $('#Funcionario option:selected').text();

            if ($('#Funcionario option:selected').val() == "")
                return;

            // Verificar se já está na lista
            var cadastrado = false;
            $('input[name=Funcionarios]').each(function () {
                if ($(this).val() == funcionarioId) {
                    alert("O funcionário escolhido já está cadastrado.");
                    cadastrado = true;
                    return;
                }
            });

            if (cadastrado == false) {
                $('#table-funcionario tbody').append(
                    '<tr>\
                    <td>' + funcionario + '<input type="hidden" name="Funcionarios" value="' + funcionarioId + '"/></td>\
                    <td><a href="javascript:void(0)" onclick="Delete(this)"><button id="btn-remove" class="btn btn-default btn-sm " type="button"><span class="glyphicon glyphicon-minus"></span></button></td>\</tr>');
            }
        });
    });
    
    function Delete(a) {
        var row = $(a).parents('tr:first');
        row.fadeTo('fast', 0, function () {
            row.remove();
        });
    }
</script>
