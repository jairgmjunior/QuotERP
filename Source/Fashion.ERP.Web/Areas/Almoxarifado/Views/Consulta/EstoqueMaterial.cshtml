@model Fashion.ERP.Web.Areas.Almoxarifado.Models.ConsultaEstoqueMaterialModel

@section javascript{@Scripts.Render(Links.Bundles.Scripts.PdfObject)}

@Html.ValidationSummaryEx()
@using (Html.BeginForm(MVC.Almoxarifado.Consulta.EstoqueMaterial(), FormMethod.Post, new { @class = "form-horizontal small-labels" }))
{
    @Html.AntiForgeryToken()
    <div class="accordion" id="accordion2">
        <div class="accordion-group">
            <div class="accordion-heading">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapsePesquisar">Pesquisar
                </a>
            </div>
            <div id="collapsePesquisar" class="accordion-body">
                <div class="accordion-inner">
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Unidade, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.DropDownList("Unidade", null, "-- Selecione --", new { @class = "input-large" })
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.DepositoMaterial, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.DropDownList("DepositoMaterial", null, "-- Selecione --", new { @class = "input-large" })
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.Label("referencia-material", "Referência", new { @class = "control-label" })
                                <div class="controls">
                                    @Html.Hidden("Material")
                                    <div class="input-append">
                                        <input id="referencia-material" class="input-small" type="text" />
                                        <button id="pesquisar-material" class="btn" type="button"><i class="icon-search"></i></button>
                                        <span id="descricao-material" class="add-on"></span>
                                    </div>
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Descricao)
                                <div class="controls">
                                    @Html.TextBoxFor(x => x.Descricao, new { @class = "input-xlarge" })
                                </div>
                            </div>
                        </div>
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Categorias)
                                <div class="controls">
                                    @(Html.Kendo().MultiSelect()
                                        .Name("Categorias")
                                        .BindTo(ViewBag.Categorias)
                                        .Value(Model.Categorias)
                                    )
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Subcategorias)
                                <div class="controls">
                                    @(Html.Kendo().MultiSelect()
                                          .Name("Subcategorias")
                                          .BindTo(ViewBag.Subcategorias)
                                          .Value(Model.Subcategorias)
                                          )
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Familias)
                                <div class="controls">
                                    @(Html.Kendo().MultiSelect()
                                        .Name("Familias")
                                        .BindTo(ViewBag.Familias)
                                        .Value(Model.Familias)
                                    )
                                </div>
                            </div>
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Marcas)
                                <div class="controls">
                                    @(Html.Kendo().MultiSelect()
                                        .Name("Marcas")
                                        .BindTo(ViewBag.Marcas)
                                        .Value(Model.Marcas)
                                    )
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="well">
                        <div class="row">
                            <div class="span3">
                                @Html.HiddenFor(x => x.ModoConsulta)
                                <div class="btn-group" data-toggle="buttons-radio">
                                    <button name="btn-ModoConsulta" class="btn btn-info active" type="button" value="listagem">Listagem</button>
                                    <button name="btn-ModoConsulta" class="btn btn-info" type="button" value="impressao">Impressão</button>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="span3">
                                <div class="control-group">
                                    @Html.LabelForRequired(x => x.OrdenarPor, new { @class = "control-label " })
                                    <div class="controls">
                                        @Html.DropDownList("OrdenarPor", "")
                                    </div>
                                </div>
                            </div>
                            <div class="span3">
                                <div class="control-group">
                                    @Html.LabelForRequired(x => x.OrdenarEm, new { @class = "control-label " })
                                    <div class="controls">
                                        <select name="OrdenarEm">
                                            <option value="asc">Ascendente</option>
                                            <option value="desc">Descendente</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="span6">
                                <button id="pesquisar-relatorio" class="btn btn-info pull-right" type="button" data-loading-text="Aguarde..." style="display: none;">Pesquisar</button>
                                <button id="pesquisar-grid" class="btn btn-info pull-right" type="submit" data-loading-text="Aguarde...">Pesquisar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div id="pdf"></div>
@(Html.Kendo().Grid(Model.Grid)
    .Name("Grid")
    .Columns(columns =>
    {
        columns.Bound(x => x.Unidade);
        columns.Bound(x => x.DepositoMaterial);
        columns.Bound(x => x.Referencia);
        columns.Bound(x => x.Descricao);
        columns.Bound(x => x.UnidadeMedida);
        columns.Bound(x => x.Saldo).Format("{0:N4}").HtmlAttributes(new { style = "text-align: right;" });
        columns.Bound(x => x.QtdeReservada).Format("{0:N4}").HtmlAttributes(new { style = "text-align: right;" });
        columns.Bound(x => x.QtdeDisponivel).Format("{0:N4}").HtmlAttributes(new { style = "text-align: right;" });
        columns.Template(item => Html.ActionLink("Extrato", MVC.Almoxarifado.Consulta.ExtratoItem(item.Id), new { @class = "btn btn-primary btn-small", data_toggle = "modal", data_target = "#modal-extratoitem" })).Width(80);
    })
)


@{
    Html.RenderAction("Pesquisar", "Material", new { area = "Almoxarifado" });
}

<script>

    $(function () {
        // Seleciona o modo de consulta
        $('button[name=btn-ModoConsulta]').on('click', function () {

            var $ModoConsulta = $('#ModoConsulta');

            if (this.value == 'impressao') {
                $ModoConsulta.val('Imprimir');

                $('#row-imprimir').show();
                $('#pesquisar-relatorio').show();
                $('#pesquisar-grid').hide();

            } else {
                $ModoConsulta.val('Listar');

                $('#row-imprimir').hide();
                $('#pesquisar-relatorio').hide();
                $('#pesquisar-grid').show();

            }
        });

        // Preenche o combo de subcategoria de acordo com a categoria escolhida
        $('#Categorias').on("change", function () {
            var subcategoria = $('#Subcategorias').data("kendoMultiSelect");
            
            // Limpar as subcategorias
            subcategoria.setDataSource(new kendo.data.DataSource({ data: [] }));
            // Limpa selecionados
            //subcategoria.value([]);

            var data = { };

            var categorias = $(this).data("kendoMultiSelect").value();
            if (categorias) {
                $.each(categorias, function (index, value) {
                    var url = '/Almoxarifado/Subcategoria/Subcategorias/' + value;
                    $.getJSON(url, function (result) {
                        $.each(result, function (idx, item) {
                            subcategoria.dataSource.add({ Text: item.Nome, Value: item.Id });
                        });
                    }).fail(function (jqXhr, textStatus, errorThrown) {
                        alert(errorThrown);
                    });
                });
            }
        });

        $('#Unidade').on("change", function () {

            // Preenche o combo de depósito de destino de acordo com a unidade escolhida
            var depositoMaterial = $('#DepositoMaterial');
            depositoMaterial.empty();
            depositoMaterial.append($('<option />').text('-- Selecione --'));

            var unidadeId = $(this).val();
            if (unidadeId != '') {
                var url = '/Almoxarifado/DepositoMaterial/DepositosPorUnidade/' + unidadeId;
                $.getJSON(url, function (result) {
                    $.each(result, function (index, item) {
                        var option = $('<option />').val(item.Id).text(item.Nome);
                        depositoMaterial.append(option);
                    });
                }).fail(function (jqXhr, textStatus, errorThrown) {
                    alert(errorThrown);
                });
            }
        });

        // Mostra o extrato do item
        $('#mostra-extratoitem').on('click', function () {
            var $this = $(this);
            var url = $this.attr('href');

            $.get(url, function (data) {
                $('#modal-body-extratoitem').html(data);
                $('#modal-extratoitem').on('hidden', function () {
                    $('#modal-body-extratoitem').html('<img src="/Content/images/ajax-loader.gif" style="width: 30px; height: 30px" />');
                }).modal('show');
            });

            return false;
        });
    })
</script>
<!-- Modal do extrato do item -->
<div id="modal-extratoitem" class="modal hide fade">

    <div class="modal-header">
        <a href="javascript:void(0)" class="close" data-dismiss="modal" aria-hidden="true">&times;</a>
        <h3>Extrato do item</h3>
    </div>
    @using (Html.BeginForm(MVC.Almoxarifado.Consulta.ExtratoItem()))
    {
        <div id="modal-body-extratoitem" class="modal-body">
            <div class="text-center">
                <img src="/Content/images/ajax-loader.gif" style="width: 30px; height: 30px" /></div>
        </div>
    }
    <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-dismiss="modal" aria-hidden="true">Fechar</button>
    </div>
</div>
<script>
    $(function () {

        // Destruir o modal para ir no servidor buscar conteúdo novo
        $(document).on('hidden', '.modal', function () {
            $(this).removeData('modal');
        });

        $(document).on('click', '#filtrar-extratoitem', function (e) {
            var form = $(this).closest("form");
            var url = "@Html.GetUrl(MVC.Almoxarifado.Consulta.ExtratoItem())";

            $.post(url, form.serialize(), function (data) {
                $("#modal-body-extratoitem").html(data);
                $('#DataInicial').focus();
            });

        });
        
    });
</script>
