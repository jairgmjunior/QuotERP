@model Fashion.ERP.Web.Areas.Almoxarifado.Models.ExtratoItemModel

@{ Layout = null; }

<div class="modal-header">
    <a href="javascript:void(0)" class="close" data-dismiss="modal" aria-hidden="true">&times;</a>
    <h3>Extrato do Item</h3>
</div>
<div id="modal-body-extratoitem" class="modal-body" style="overflow-y: hidden;">
    @using (Html.BeginForm(MVC.Almoxarifado.Consulta.ExtratoItem()))
    {
        @Html.AntiForgeryToken()
        @Html.HiddenFor(x => x.Id)
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.Unidade, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.Unidade)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.Deposito, new {@class = "control-label col-sm-4 col-md-3 font-bold"})
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.Deposito)
                        </div>
                    </div>
                </div>  
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 col-md-9">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.Material, new {@class = "control-label col-sm-2 col-md-2 font-bold"})
                    <div class="col-sm-10 col-md-10">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.Material)
                        </div>
                    </div>
                </div>    
            </div>
        </div>
        <div class="row">
            <div class="col-sm-12 col-md-9">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.DataInicial, new {@class = "control-label col-sm-2 col-md-2"})
                    <div class="col-sm-8 col-md-8 col-lg-7  ">
                        <div class="col-lg-5 col-md-5 padding0">
                            <div class="">
                                @(Html.Kendo().DatePickerFor(x => x.DataInicial))
                            </div>
                        </div>
                        <div class="col-lg-7 col-md-7">
                            <div class="form-group form-group-sm" style="margin-bottom: 0;">
                                @Html.LabelFor(x=>x.DataFinal, new { @class = "control-label control-label-meio col-sm-3" })
                                <div class="col-lg-9 col-md-9 padding0">
                                    @(Html.Kendo().DatePickerFor(x => x.DataFinal))
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group"> 
                    <div class="col-sm-offset-4 col-md-offset-3 col-sm-8 col-md-9">
                        <input id="filtrar-extratoitem" type="button" value="Filtrar" class="btn btn-default" data-loading-text="Aguarde..." />
                    </div>
                </div>
            </div>
        </div>
        <div class="well" style="background-color: #fff">
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(x => x.SaldoInicial, new {@class = "control-label col-sm-7 col-md-5 font-bold"})
                        <div class="col-sm-4 col-md-3 ">
                            <div class="form-control-static no-gutter">
                                @Html.ValueFor(x => x.SaldoInicial, "{0:N4}")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(x => x.SaldoFinal, new {@class = "control-label col-sm-7 col-md-5 font-bold"})
                        <div class="col-sm-4 col-md-3">
                            <div class="form-control-static no-gutter">
                                @Html.ValueFor(x => x.SaldoFinal, "{0:N4}")
                            </div>
                        </div>
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="table-responsive panel">
                    @(Html.Kendo().Grid(Model.Grid)
                          .Name("grid-extratoitem")
                          .Columns(columns =>
                          {
                              columns.Bound(x => x.Data).Format("{0:dd/MM/yyyy hh:mm}");
                              columns.Bound(x => x.OrigemDestino);
                              columns.Bound(x => x.Entrada).Format("{0:N4}").HtmlAttributes(new { style = "text-align: right;" });
                              columns.Bound(x => x.Saida).Format("{0:N4}").HtmlAttributes(new { style = "text-align: right;" });
                          })
                          )    
                </div>
            </div>
            <div class="row">
                <div class="col-sm-6">
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(x => x.QtdeDisponivel, new {@class = "control-label col-sm-7 col-md-5 font-bold"})
                        <div class="col-sm-4 col-md-3">
                            <div class="form-control-static no-gutter">
                                @Html.ValueFor(x => x.QtdeDisponivel, "{0:N4}")
                            </div>
                        </div>
                    </div>
                </div>
                <div class="col-sm-6">
                    <div class="form-group form-group-sm">
                        @Html.LabelFor(x => x.UnidadeMedida, new {@class = "control-label col-sm-7 col-md-5 font-bold"})
                        <div class="col-sm-4 col-md-3">
                            <div class="form-control-static no-gutter">
                                @Html.ValueFor(x => x.UnidadeMedida)
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>