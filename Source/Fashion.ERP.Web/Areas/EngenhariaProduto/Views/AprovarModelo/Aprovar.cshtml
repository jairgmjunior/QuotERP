@model Fashion.ERP.Web.Areas.EngenhariaProduto.Models.AprovarModeloModel
@Html.ValidationSummaryEx()
<hr/>
<div class="detail">
    <div class="row">
        <div class="span4">
            <div class="control-group">
                @Html.LabelFor(x => x.Referencia, new { @class = "title-label" })
                <div class="value-label">
                    @Html.ValueFor(x => x.Referencia)
                    @Html.HiddenFor(x => x.Referencia)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.DescricaoModelo, new { @class = "title-label" })
                <div class="value-label">
                    @Html.ValueFor(x => x.DescricaoModelo)
                    @Html.HiddenFor(x => x.DescricaoModelo)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.NaturezaDescricao, new { @class = "title-label" })
                <div class="value-label">
                    @Html.ValueFor(x => x.NaturezaDescricao)
                    @Html.HiddenFor(x => x.NaturezaDescricao)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.ArtigoDescricao, new { @class = "title-label" })
                <div class="value-label">
                    @Html.ValueFor(x => x.ArtigoDescricao)
                    @Html.HiddenFor(x => x.ArtigoDescricao)
                </div>
            </div>
        </div>
        <div class="span4">
            <div class="control-group">
                @Html.LabelFor(x => x.EstilistaNome, new { @class = "title-label" })
                <div class="value-label">
                    @Html.ValueFor(x => x.EstilistaNome)
                    @Html.HiddenFor(x => x.EstilistaNome)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.DataCriacao, new { @class = "title-label" })
                <div class="value-label">
                    @Html.ValueFor(x => x.DataCriacao)
                    @Html.HiddenFor(x => x.DataCriacao)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.ClassificacaoDescricao, new { @class = "title-label" })
                <div class="value-label">
                    @Html.ValueFor(x => x.ClassificacaoDescricao)
                    @Html.HiddenFor(x => x.ClassificacaoDescricao)
                </div>
            </div>
            <div class="control-group">
                @Html.LabelFor(x => x.Observacao, new { @class = "title-label" })
                <div class="value-label">
                    @Html.ValueFor(x => x.Observacao)
                    @Html.HiddenFor(x => x.Observacao)
                </div>
            </div>
        </div>
    </div>
</div>
<hr/>
@using (Html.BeginForm(MVC.EngenhariaProduto.AprovarModelo.Aprovar(), FormMethod.Post, new { id="form", @class = "form-horizontal" })) {
	@Html.AntiForgeryToken()
	@Html.HiddenFor(x => x.Id)
    <div class="row">
        <div class="span6">
            <div class="control-group">
                @Html.LabelForRequired(x => x.DataAprovacao)
                <div class="controls">
                    @Html.EditorFor(x => x.DataAprovacao)
                    @Html.ValidationMessageFor(x => x.DataAprovacao, null, new { @class="help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.Tag)
                <div class="controls">
                    @Html.EditorFor(x => x.Tag)
                    @Html.ValidationMessageFor(x => x.Tag, null, new { @class="help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.Colecao)
                <div class="controls">
                    @Html.DropDownList("Colecao", null, "-- Selecione --", new { @class = "input-large" })
                    @Html.ValidationMessageFor(x => x.Colecao, null, new { @class = "help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.QuantidadeProducao)
                <div class="controls">
                    @Html.EditorFor(x => x.QuantidadeProducao, "int")
                    @Html.ValidationMessageFor(x => x.QuantidadeProducao, null, new { @class="help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.PossuiSubmodelos)
                <div class="controls">
                    @Html.CheckBoxFor(x => x.PossuiSubmodelos)
                </div>
            </div>
        </div>
        <div class="span6">
            <div class="control-group">
                @Html.LabelForRequired(x => x.ClassificacaoDificuldade)
                <div class="controls">
                    @Html.DropDownList("ClassificacaoDificuldade", null, "-- Selecione --", new { @class = "input-large" })
                    @Html.ValidationMessageFor(x => x.ClassificacaoDificuldade, null, new { @class = "help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.ProgramacaoProducao)
                <div class="controls">
                    @Html.EditorFor(x => x.ProgramacaoProducao)
                    @Html.ValidationMessageFor(x => x.ProgramacaoProducao, null, new { @class="help-block" })
                </div>
            </div>
            <div class="control-group">
                @Html.LabelForRequired(x => x.ObservacaoAprovacao)
                <div class="controls">
                    @Html.EditorFor(x => x.ObservacaoAprovacao)
                    @Html.ValidationMessageFor(x => x.ObservacaoAprovacao, null, new { @class="help-block" })
                </div>
            </div>
        </div>
    </div>
    
    <fieldset id="submodelos" style="@(Model.PossuiSubmodelos ? "" : "display: none")">
        <legend>Dados submodelos</legend>
        
        <div class="row">
            <div class="span6">
                <div class="control-group">
                    <label for="Sequencia" class="control-label">Sequência</label>
                    <div class="controls">
                        @(Html.Kendo().IntegerTextBox()
                              .Name("Sequencia")
                              .Value(Model.Sequencias != null ? Model.Sequencias.Max() + 1 : 1)
                              .Min(1)
                              .HtmlAttributes(new { @class = "integer input-small" }))
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelForRequired(x => x.ProdutoBase)
                    <div class="controls">
                        @Html.DropDownList("ProdutoBase", null, "-- Selecione --", new { @class = "input-large" })
                        @Html.ValidationMessageFor(x => x.ProdutoBase, null, new { @class = "help-block" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelForRequired(x => x.Comprimento)
                    <div class="controls">
                        @Html.DropDownList("Comprimento", null, "-- Selecione --", new { @class = "input-large" })
                        @Html.ValidationMessageFor(x => x.Comprimento, null, new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="span6">
                <div class="control-group">
                    @Html.LabelForRequired(x => x.Descricao)
                    <div class="controls">
                        @Html.TextBoxFor(x => x.Descricao, new { @readonly = "readonly", @class = "input-xlarge"})
                        @Html.ValidationMessageFor(x => x.Descricao, null, new { @class="help-block" })
                    </div>
                </div>
                <div class="control-group">
                    @Html.LabelForRequired(x => x.Barra)
                    <div class="controls">
                        @Html.DropDownList("Barra", null, "-- Selecione --", new { @class = "input-large" })
                        @Html.ValidationMessageFor(x => x.Barra, null, new { @class = "help-block" })
                    </div>
                </div>
                <div class="control-group">
                    <label for="QuantidadeProducaoSubmodelo" class="control-label">Quantidade produção</label>
                    <div class="controls">
                        @(Html.Kendo().IntegerTextBox()
                            .Name("QuantidadeProducaoSubmodelo")
                            .Min(1)
                            .Value(1)
                            .HtmlAttributes(new { @class = "integer input-small" }))
                        
                        <button id="adicionar-submodelo" type="button" class="btn"><i class="icon-plus"></i></button>
                    </div>
                </div>
            </div>
        </div>
        <div class="control-group">
        <div class="controls">
            <table id="table-submodelo" class="table table-striped table-condensed" style="width: 500px">
                <thead>
                    <tr>
                        <th>Tag-Sequência</th>
                        <th>Descrição</th>
                        <th>Quantidade</th>
                        <th style="width: 16px"></th>
                    </tr>
                </thead>
                <tbody>
                    @if (Model.Sequencias != null)
                    {
                        for (int i = 0; i < Model.Sequencias.Count; i++)
                        {
                            var sequencia = Model.Sequencias[i];
                            var produtoBase = Model.ProdutoBases[i];
                            var comprimento = Model.Comprimentos[i];
                            var descricao = Model.Descricoes[i];
                            var barra = Model.Barras[i];
                            var quantidadeProducao = Model.QuantidadeProducoes[i];
                            <tr>
                                <td>
                                    @sequencia
                                    <input type="hidden" name="Sequencias" value="@sequencia"/>
                                </td>
                                <td>
                                    @descricao
                                    <input type="hidden" name="ProdutoBases" value="@produtoBase"/>
                                    <input type="hidden" name="Comprimentos" value="@comprimento"/>
                                    <input type="hidden" name="Descricoes" value="@descricao"/>
                                    <input type="hidden" name="Barras" value="@barra"/>
                                </td>
                                <td>
                                    @quantidadeProducao
                                    <input type="hidden" name="QuantidadeProducoes" value="@quantidadeProducao"/>
                                </td>
                                <td><a href="javascript:void(0)" onclick="Delete(this)"><i class="icon-remove"></i></a></td>
                            </tr>
                        }
                    }
                </tbody>
            </table>
        </div>
    </div>
    </fieldset>
    
	<div class="form-actions">
		<button id="btnSubmit" class="btn btn-primary" type="submit" data-loading-text="Aguarde...">Salvar</button>
	</div>
}
<script>
    var natureza = '@Model.NaturezaDescricao ';
    var classificacao = '@Model.ClassificacaoDescricao ';
    var artigo = '@Model.ArtigoDescricao ';
    
    $(function () {
        
        $('#PossuiSubmodelos').on('change', function () {
            toggleSubmodelos(this);
        });

        // Adicionar submodelos
        $('#adicionar-submodelo').on('click', function () {

            // Validar
            // TODO: verificar se todos os campos foram preenchidos corretamente

            var kendoSequencia = $("#Sequencia").data("kendoNumericTextBox");

            var sequencia = kendoSequencia.value();
            var produtoBaseId = $('#ProdutoBase').val();
            var comprimentoId = $('#Comprimento').val();
            var descricao = $('#Descricao').val();
            var barraId = $('#Barra').val();
            var quantidadeProducao = $('#QuantidadeProducaoSubmodelo').val();
            
            // Verificar se já está na lista
            var cadastrado = false;
            $('input[name=Sequencias]').each(function () {

                var sequenciaVal = $(this).val();

                if (sequenciaVal == sequencia) {

                    alert("A sequência informada já está cadastrada.");
                    cadastrado = true;
                    return;
                }
            });
            
            if (cadastrado == false) {
                $('#table-submodelo tbody').append(
                    '<tr>\
                        <td>' + sequencia + '<input type="hidden" name="Sequencias" value="' + sequencia + '"/>\
                        <td>' + descricao + '<input type="hidden" name="ProdutoBases" value="' + produtoBaseId + '"/>\
                        <input type="hidden" name="Comprimentos" value="' + comprimentoId + '"/>\
                        <input type="hidden" name="Descricoes" value="' + descricao + '"/>\
                        <input type="hidden" name="Barras" value="' + barraId + '"/>\
                        </td>\
                        <td>' + quantidadeProducao + '<input type="hidden" name="QuantidadeProducoes" value="' + quantidadeProducao + '"/>\
                        <td><a href="javascript:void(0)" onclick="Delete(this)"><i class="icon-remove"></i></a></td>\
                    </tr>');

                kendoSequencia.value(parseFloat(sequencia) + 1);
            }
        });

        $('#QuantidadeProducao').on('change', function () {
            var kendoQtdProducao = $(this).data("kendoNumericTextBox");
            var kendoQtdProducaoSubmodelo = $("#QuantidadeProducaoSubmodelo").data("kendoNumericTextBox");
            kendoQtdProducaoSubmodelo.value(kendoQtdProducao.value());
        });
        
        $('#ProdutoBase, #Comprimento, #Barra').on('change', function () {
            PreencheDescricao();
        });
    });

    function PreencheDescricao() {
        var base = ItemSelecionado('ProdutoBase');
        var comprimento = ItemSelecionado('Comprimento');
        var tipoBarra = ItemSelecionado('Barra');
        var descricao = (natureza + classificacao + artigo + base + comprimento + tipoBarra).trim();
        $('#Descricao').val(descricao);
    }

    function ItemSelecionado(dropdown) {
        return $('#' + dropdown + ' option:selected').val() ? $('#' + dropdown + ' option:selected').text() + ' ' : '';
    }

    function toggleSubmodelos(checkbox){
        if ($(checkbox).is(':checked')) {
            $('#submodelos').show();
        } else {
            $('#submodelos').hide();
        }
    }
    
    function Delete(a) {
        var row = $(a).parents('tr:first');
        row.fadeTo('fast', 0, function () {
            row.remove();
        });
    }
</script>