@model Fashion.ERP.Web.Areas.EngenhariaProduto.Models.ModelagemModeloModel
@using (Html.BeginForm(MVC.EngenhariaProduto.Modelo.Modelagem(), FormMethod.Post, new { id = "form", @class = "form-horizontal" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummaryEx()
    @Html.HiddenFor(x => x.ModeloId)
    @Html.HiddenFor(x => x.ModeloReferencia)
    @Html.HiddenFor(x => x.ModeloDescricao)
    @Html.HiddenFor(x => x.ModeloEstilistaNome)
    @Html.HiddenFor(x => x.ModeloDataCriacao)

    <ul class="nav nav-tabs">
        <li>@Html.ActionLinkAuth("Detalhar", MVC.EngenhariaProduto.Modelo.Detalhar(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Editar", MVC.EngenhariaProduto.Modelo.Editar(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Variação", MVC.EngenhariaProduto.Modelo.Variacao(Model.ModeloId))</li>
        <li class="active">@Html.ActionLinkAuth("Modelagem", MVC.EngenhariaProduto.Modelo.Modelagem(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Sequência de Produção", MVC.EngenhariaProduto.SequenciaProducao.SequenciaProducao(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Materiais de Consumo", MVC.EngenhariaProduto.ModeloMaterialConsumo.ModeloMaterialConsumo(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Programação de Bordado", MVC.EngenhariaProduto.Modelo.ProgramacaoBordado(Model.ModeloId))</li>
    </ul>
    
    <br/>
    <fieldset>
        <legend><small>Dados do Modelo</small></legend>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloReferencia, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.ModeloReferencia)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloDescricao, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.ModeloDescricao)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloEstilistaNome, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.ModeloEstilistaNome)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloDataCriacao, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.DisplayFor(x => x.ModeloDataCriacao)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend><small>Dados da Modelagem</small></legend>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Funcionario)
                    <div class="col-sm-8 col-md-8 col-lg-7 ">
                        @Html.CustomKendoComboBoxForFuncionario(x => x.Funcionario)
                        @Html.ValidationMessageFor(x => x.Funcionario, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.DataModelagem)
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        @Html.EditorFor(x => x.DataModelagem)
                    </div>
                </div>
            </div>
        </div>

        <h5>Detalhamento Técnico</h5>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Tecido)
                    <div class="col-sm-8 col-md-8 col-lg-7 ">
                        @Html.TextBoxFor(x => x.Tecido, new {  @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Tecido, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Cos)
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        @Html.TextBoxFor(x => x.Cos, new {  @class = "numeric-only form-control" })
                        @Html.ValidationMessageFor(x => x.Cos, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Passante)
                    <div class="col-sm-8 col-md-8 col-lg-7 ">
                        @Html.TextBoxFor(x => x.Passante, new {  @class = "numeric-only form-control" })
                        @Html.ValidationMessageFor(x => x.Passante, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Entrepernas)
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        @Html.TextBoxFor(x => x.Entrepernas, new {  @class = "numeric-only form-control" })
                        @Html.ValidationMessageFor(x => x.Entrepernas, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Boca)
                    <div class="col-sm-8 col-md-8 col-lg-7 ">
                        @Html.TextBoxFor(x => x.Boca, new {  @class = "numeric-only form-control" })
                        @Html.ValidationMessageFor(x => x.Boca, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Modelagem)
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        @Html.TextBoxFor(x => x.Modelagem, new {  @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Modelagem, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Tamanho)
                    <div class="col-sm-8 col-md-8 col-lg-7 ">
                        @Html.DropDownListFor(x => x.Tamanho, null, "-- Selecione --", new { @class = "form-control" })                    
                        @Html.ValidationMessageFor(x => x.Tamanho, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Localizacao)
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        @Html.TextBoxFor(x => x.Localizacao, new {  @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Localizacao, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Observacao)
                    <div class="col-sm-8 col-md-8 col-lg-7 ">
                        @Html.TextBoxFor(x => x.Observacao, new {  @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Observacao, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
        </div>

        <h5>Dados de Etiquetas</h5>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.EtiquetaMarca)
                    <div class="col-sm-8 col-md-8 col-lg-7 ">
                        @Html.TextBoxFor(x => x.EtiquetaMarca, new {  @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.EtiquetaMarca, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.EtiquetaComposicao)
                    <div class="col-sm-8 col-md-8 col-lg-7 ">
                        @Html.TextBoxFor(x => x.EtiquetaComposicao, new {  @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.EtiquetaComposicao, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelForRequired(x => x.Tag)
                    <div class="col-sm-8 col-md-8 col-lg-7 ">
                        @Html.TextBoxFor(x => x.Tag, new {  @class = "form-control" })
                        @Html.ValidationMessageFor(x => x.Tag, string.Empty, new { @class = "help-block" })
                    </div>
                </div>
            </div>
        </div>

    </fieldset>

    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                <div class="col-sm-offset-4 col-md-offset-3 col-sm-8 col-md-9">
                    <button id="btnSubmit" class="btn btn-primary" type="submit" data-loading-text="Aguarde...">Salvar</button>
                </div>
            </div>
        </div>     
    </div>
}

@{
    Html.RenderAction("PesquisarComParametros", "Funcionario", new { area = "Comum", SelecaoUnica = "true", funcaoFuncionario = "Modelista" });
}