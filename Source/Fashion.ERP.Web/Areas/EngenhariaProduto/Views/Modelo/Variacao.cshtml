@model Fashion.ERP.Web.Areas.EngenhariaProduto.Models.VariacaoModeloModel

@using (Html.BeginForm(MVC.EngenhariaProduto.Modelo.Variacao(), FormMethod.Post, new { id = "form", @class = "form-horizontal", novalidate = "novalidate" }))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummaryEx()
    @Html.HiddenFor(x => x.ModeloId)
    @Html.HiddenFor(x => x.ModeloReferencia)
    @Html.HiddenFor(x => x.ModeloDescricao)
    @Html.HiddenFor(x => x.ModeloEstilistaNome)
    @Html.HiddenFor(x => x.ModeloDataCriacao)

    <ul class="nav nav-tabs">
        <li>@Html.ActionLinkAuth("Detalhar", MVC.EngenhariaProduto.Modelo.Detalhar(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Editar", MVC.EngenhariaProduto.Modelo.Editar(Model.ModeloId))</li>
        <li class="active">@Html.ActionLinkAuth("Variação", MVC.EngenhariaProduto.Modelo.Variacao(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Modelagem", MVC.EngenhariaProduto.Modelo.Modelagem(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Sequência de Produção", MVC.EngenhariaProduto.SequenciaProducao.SequenciaProducao(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Materiais de Consumo", MVC.EngenhariaProduto.ModeloMaterialConsumo.ModeloMaterialConsumo(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Programação de Bordado", MVC.EngenhariaProduto.Modelo.ProgramacaoBordado(Model.ModeloId))</li>
    </ul>
    
    <br/>

    <fieldset>
        <legend>Dados do Modelo</legend>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloReferencia, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.ModeloReferencia)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloDescricao, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.ModeloDescricao)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloEstilistaNome, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.ModeloEstilistaNome)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloDataCriacao, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.DisplayFor(x => x.ModeloDataCriacao)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend>Dados da Variação</legend>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.Label("Variação", new { @class = "control-label col-sm-4 col-md-3" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        @Html.DropDownList("Variacao", null, "-- Selecione --", new { @class = "form-control" })
                        @Html.ValidationMessage("Variacao", new { @class = "help-block" })
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    @Html.Label("Cor", new { @class = "control-label col-sm-4 col-md-3" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="input-group">
                            @Html.DropDownList("Cor", null, "-- Selecione --", new { @class = "form-control" })
                            <span class="input-group-btn">
                                <button id="btn-add" class="btn btn-default btn-sm " type="button">
                                    <span class="glyphicon glyphicon-plus"></span>
                                </button>
                            </span>
                        </div>
                        @Html.ValidationMessage("Cor", new { @class = "help-block" })

                        <table id="table-variacao" class="table table-striped table-condensed">
                            <thead>
                                <tr>
                                    <th></th>
                                    <th style="width: 100px"></th>
                                    <th style="width: 16px"></th>
                                </tr>
                            </thead>
                            <tbody>
                                @if (Model.Variacoes != null)
                                {
                                    long variacaoid = 0;
                                
                                    for (int i = 0; i < Model.Variacoes.Count; i++)
                                    {
                                        var cor = Model.Cores[i];
                                    
                                        <tr>
                                            @if (variacaoid != Model.Variacoes[i].Value)
                                            {
                                                variacaoid = Model.Variacoes[i].Value;
                                            
                                                <td rowspan="@Model.Variacoes.Count(s => s == variacaoid)">
                                                    @(ViewBag.VariacoesDicionario[variacaoid])
                                                </td>
                                            }

                                            <td>
                                                @(ViewBag.CoresDicionario[cor])
                                                <input type="hidden" name="Variacoes" value="@Model.Variacoes[i]" />
                                                <input type="hidden" name="Cores" value="@cor" />
                                            </td>
                                            <td><a href="javascript:void(0)" onclick="Delete(this)"><span class="glyphicon glyphicon-minus"></span></a></td>
                                        </tr>
                                    }
                                }
                            </tbody>
                        </table>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>

    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                <div class="col-sm-offset-4 col-md-offset-3 col-sm-8 col-md-9">
                    <button id="btnSubmit" class="btn btn-primary" type="submit" data-loading-text="Aguarde...">Salvar</button>
                </div>
            </div>
        </div>     
    </div>
}
<script>
    $(document).ready(function () {
        
        $('#Variacao').rules("add", {
            required: true,
            maxlength: 100,
            messages: {
                required: "Informe a variação",
                maxlength: jQuery.format("Variação não deve ser maior que {0} caracteres")
            }
        });

        $('#Cor').rules("add", {
            required: true,
            messages: {
                required: "Informe a cor"
            }
        });

        $('#btn-add').on('click', function () {
            
            // Validar
            var form = $(this).closest("form");
            
            if (!form.valid()) {
                return;
            }

            var corId = $('#Cor').val();
            var cor = $('#Cor option:selected').text();
            var variacao = $('#Variacao option:selected').text();

            var variacaoId = $('#Variacao').val();
            var variacoes = $('input[name=Variacoes]').map(function () {
                return this.value;
            }).get();

            var duplicado = false;

            // Verificar se já tem uma cor para esta variação
            $('input[name=Cores]').each(function (index) {

                if (variacoes[index] == variacaoId) {
                    if ($(this).val() == corId) {
                        alert("A cor escolhida já está cadastrada.");
                        duplicado = true;
                        return;
                    }
                }
                
            });
            
            // Adiciona apenas se não existir
            if (duplicado == false) {
                
                var idxVariacao = jQuery.inArray(variacaoId, variacoes);
                if (idxVariacao == -1) {

                    // Se não existir variação, criá-la com a td:rowspan
                    $('#table-variacao tbody').append(
                    '<tr>\
                        <td rowspan="1">' + variacao + '</td>\
                        <td>' + cor + '<input type="hidden" name="Cores" value="' + corId + '"/>\
                            <input type="hidden" name="Variacoes" value="' + variacaoId + '"/></td>\
                        <td><a href="javascript:void(0)" onclick="Delete(this)"><span class="glyphicon glyphicon-minus"></span></a></td>\
                    </tr>');
                    
                } else {
                    // se existir, adicioná-la ao fim do grupo
                    var row = $($('#table-variacao tbody tr').get(idxVariacao));
                    
                    // Adiciona 1 ao rowspan, e retorna seu valor
                    var lastIdx = row.find('td[rowspan]').attr('rowspan', function (i, rs) { return rs.toNumber() + 1; }).attr('rowspan').toNumber();

                    var lastRow = $($('#table-variacao tbody tr').get(idxVariacao + lastIdx - 2));
                    lastRow.after('<tr>\
                            <td>' + cor + '<input type="hidden" name="Cores" value="' + corId + '"/>\
                                <input type="hidden" name="Variacoes" value="' + variacaoId + '"/></td>\
                            <td><a href="javascript:void(0)" onclick="Delete(this)"><span class="glyphicon glyphicon-minus"></span></a></td>\
                        </tr>');
                }
                
            }

        });

    });

    function Delete(a) {

        // Seleciona a linha a ser excluída
        var row = $(a).parent().parent();

        if (row.find('td[rowspan]').exists()) {

            // A linha excluída é o próprio rowspan
            // Então, mover o rowspan para a próxima linha, se houver
            var nextrow = row.next();
            if (nextrow != undefined && nextrow.has("td[rowspan]").exists() == false) {
                var tdrowspan = row.find('td[rowspan]').attr('rowspan', function (i, rs) { return rs - 1; });
                nextrow.prepend(tdrowspan);
            }

        } else {

            // Seleciona a linha que possui o rowspan e diminui o índice em 1
            row.prevAll('tr:has(td[rowspan]):first')
                .find('td[rowspan]')
                .attr('rowspan', function (i, rs) { return rs - 1; });

        }

        row.remove();
    }
</script>
