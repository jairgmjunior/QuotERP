@using Fashion.ERP.Domain.EngenhariaProduto
@using Fashion.ERP.Web.Areas.EngenhariaProduto.Models
@model PesquisaModeloAvaliacaoModel
@section javascript{@Scripts.Render(Links.Bundles.Scripts.PdfObject)}

@Html.ValidationSummaryEx()

@using (Html.BeginForm(MVC.EngenhariaProduto.ModeloAvaliacao.Index(), FormMethod.Post, new { @class = "form-horizontal small-labels" }))
{
    @Html.AntiForgeryToken()
    <div class="accordion" id="accordion2">
        <div class="accordion-group">
            <div class="accordion-heading">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapsePesquisar">Pesquisar
                </a>
            </div>
            <div id="collapsePesquisar" class="accordion-body collapse">
                <div class="accordion-inner">
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Referencia, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.EditorFor(x => x.Referencia, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Situacao)
                                <div class="controls">
                                    @Html.DropDownListFor(x => x.Situacao, Model.Situacao.ToSelectList(), "-- Selecione --")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Descricao, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.EditorFor(x => x.Descricao, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Tag, new { @class = "control-label " })
                                <div class="controls">
                                   @Html.EditorFor(x => x.Tag, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                           <div class="control-group">
                                @Html.LabelForRequired(x => x.ColecaoAprovada)
                                <div class="controls">
                                    @Html.DropDownListFor(x => x.ColecaoAprovada, null, "-- Selecione --", new { @class = "input-large" })                    
                                </div>
                            </div> 
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Estilista)
                                <div class="controls">
                                    @Html.DropDownListFor(x => x.Estilista, null, "-- Selecione --", new { @class = "input-large" })                    
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            
                        </div>
                    </div>

                    <div class="well">
                        <div class="row">
                            <div class="span3">
                                @Html.HiddenFor(x => x.ModoConsulta)
                                <div class="btn-group" data-toggle="buttons-radio">
                                    <button name="btn-ModoConsulta" class="btn btn-info active" type="button" value="listagem">Listagem</button>
                                    <button name="btn-ModoConsulta" class="btn btn-info" type="button" value="impressao">Impressão</button>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div  id="row-imprimir" style="display: none">
                                <div class="span3">
                                </div>
                                <div class="span3">
                                    <div class="control-group">
                                        @Html.LabelForRequired(x => x.OrdenarPor, new { @class = "control-label " })
                                        <div class="controls">
                                            @Html.DropDownList("OrdenarPor", "--Selecione--")
                                        </div>
                                    </div>
                                </div>
                                <div class="span3">
                                    <div class="control-group">
                                        @Html.LabelForRequired(x => x.OrdenarEm, new { @class = "control-label " })
                                        <div class="controls">
                                            <select name="OrdenarEm">
                                                <option value="asc">Ascendente</option>
                                                <option value="desc">Descendente</option>
                                            </select>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div  id="row-listagem">
                                <div class="span9">
                                </div>
                            </div>
                            <div class="span3">
                                <button id="pesquisar-relatorio" class="btn btn-info pull-right" type="button" data-loading-text="Aguarde..." style="display: none;">Pesquisar</button>
                                <button id="pesquisar-grid" class="btn btn-info pull-right" type="submit" data-loading-text="Aguarde...">Pesquisar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
@(Html.Kendo().Grid<GridModeloAvaliacaoModel>()
	.Name("Grid")
    .DataSource(dataSource => dataSource
        .Ajax()
        .ServerOperation(true)
        .PageSize(15)
        .Read(read => read.Action("ObtenhaListaGridModeloAvaliacaoModel", "ModeloAvaliacao").Data("ObtenhaPesquisaModeloAvaliacaoModel"))
        .Events(events => events.Error("onError"))
    )
	.Columns(columns =>
	{
		columns.Bound(x => x.Referencia);
		columns.Bound(x => x.Descricao);
        columns.Bound(x => x.Estilista);
		columns.Bound(x => x.Tag);
		columns.Bound(x => x.Colecao);
		columns.Bound(x => x.ColecaoAprovada).HeaderTemplate("");
		columns.Bound(x => x.Situacao).Template(s => s.Situacao.EnumToString());
        columns.Bound(p => p.Foto).ClientTemplate( "#if(Foto != null  && Foto != '') {#" + 
                "<img src='" + "#= Foto #" + "' class='img-rounded' style='width: 48px; height: 48px;'/>"+ 
            "#}#").Width(60);
	    columns.Bound(i => i.Id).ClientTemplate(@Html.ActionLinkAuth("Avaliar", "Avaliar", "ModeloAvaliacao", new {Id = "#= Id #"}, new {Area = "EngenhariaProducao", @class = "btn btn-primary"}).ToHtmlString()).Width(80).Title("");
	})
    .Resizable(resize => resize.Columns(true))
    .Reorderable(reorder => reorder.Columns(true))
    .Pageable()
    .Sortable()
    .Groupable()   
    )

<script>
    $(function () {
        // Seleciona o modo de consulta
        $('#pesquisar-grid').on('click', function() {

            limpeMensagensAlerta();

            var $ModoConsulta = $('#ModoConsulta');

            if ($ModoConsulta.val() == 'listagem') {

                $('#Grid').data('kendoGrid').dataSource.read();
                $('#Grid').data('kendoGrid').refresh();
                return false;
            }
        });

        // Seleciona o modo de consulta
        $('button[name=btn-ModoConsulta]').on('click', function() {

            var $ModoConsulta = $('#ModoConsulta');

            if (this.value == 'impressao') {
                $ModoConsulta.val('Imprimir');

                $('#row-imprimir').show();
                $('#row-listagem').hide();
                $('#pesquisar-relatorio').show();
                $('#pesquisar-grid').hide();

            } else {
                $ModoConsulta.val('listagem');

                $('#row-imprimir').hide();
                $('#row-listagem').show();
                $('#pesquisar-relatorio').hide();
                $('#pesquisar-grid').show();

            }
        });
    });

    function ObtenhaPesquisaModeloAvaliacaoModel() {
        var parametros = { model: {
            Referencia: $("#Referencia").val(),
            Descricao: $("#Descricao").val(),
            Tag: $("#Tag").val(),
            Estilista: $("#Estilista").val(),
            ColecaoAprovada: $("#ColecaoAprovada").val(),
            Situacao: $("#Situacao").val(),
            OrdenarPor: $("#OrdenarPor").val(),
            OrdenarEm: $("#OrdenarEm").val()
        }
        };

        return parametros;
    }

    function onError(e) {
        alert(e.errors);
    }

</script>