@model Fashion.ERP.Web.Areas.EngenhariaProduto.Models.CriacaoFichaTecnicaModel

@using (Html.BeginForm(MVC.EngenhariaProduto.ModeloAprovacao.CriarFichaTecnica(), FormMethod.Post, new {id = "form", @class = "form-horizontal"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummaryEx()

    for (int i = 0; i < Model.Ids.Count(); i++)    
    {
       @Html.Hidden("Ids[" + i + "]", Model.Ids[i])
    }

    <fieldset>
        <legend><small>Materiais de Composição do Custo da Ficha Técnica</small></legend>
    </fieldset>
    <br/>
    <div class="table-responsive">
        @(Html.Kendo().Grid(@Model.GridItens)
              .Name("GridItens")
              .Columns(columns =>
              {
                  columns.Bound(p => p.Id).Hidden().ClientTemplate(
                      "<input type='hidden' name='GridItens[#= index(data)#].Id' value='#= Id #' />");
                  columns.Bound(p => p.Referencia).ClientTemplate("#= Referencia #" +
                                                                  "<input type='hidden' name='GridItens[#= index(data)#].Referencia' value='#= Referencia #' />");
                  columns.Bound(p => p.Descricao).ClientTemplate("#= Descricao #" +
                                                                 "<input type='hidden' name='GridItens[#= index(data)#].Descricao' value='#= Descricao #' />");
                  columns.Bound(p => p.UnidadeMedida).Width(55).ClientTemplate("#= UnidadeMedida #" +
                                                                               "<input type='hidden' name='GridItens[#= index(data)#].UnidadeMedida' value='#= UnidadeMedida #' />");
                  columns.Bound(p => p.Custo).EditorTemplateName("numeric4casasdecimais").Width(110).ClientTemplate("#= kendo.toString(Custo, \"n4\") #" +
                                                                                                                    "<input type='hidden' name='GridItens[#= index(data)#].Custo' value='#= formateDecimalGrid(Custo) #' />");
                
                  columns.Command(command => command.Destroy() ).Width(110);
              })
              .DataSource(s => s.Ajax()
                  .Model(model =>
                  {
                      model.Id(item => item.Id);
                      model.Field(item => item.Referencia).Editable(false);
                      model.Field(item => item.Descricao).Editable(false);
                      model.Field(item => item.UnidadeMedida).Editable(false);
                      model.Field(item => item.Custo).Editable(true);
                      model.Field(item => item.Id).Editable(true).DefaultValue(0);
                  })
              )
              .ToolBar(toolbar => toolbar.Custom().Text("Incluir").HtmlAttributes(new { @id = "pesquisarvarios-material", @href = "javascript:void(0)", @class = "btn-primary" , data_toggle="modal", data_target="#modal-materiais"}))
              .Editable(editable => editable.Mode(GridEditMode.InCell))
              .Resizable(resize => resize.Columns(true))
              .Events(events =>events.Edit("onEditGrid"))
              .Navigatable()
              )
    </div>
<br/>
    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                <div class="col-sm-offset-4 col-md-offset-3 col-sm-8 col-md-9">
                    <button id="btnSubmit" class="btn btn-primary" type="submit" data-loading-text="Aguarde...">Salvar</button>
                </div>
            </div>
        </div>     
    </div>
}
@{
    Html.RenderAction("PesquisarVarios", "Material", new { area = "Almoxarifado" });
}


<script>

    $(document).ready(function () {

        $("#selecionar-materiais").on("pesquisar", function (ev, itens) {

            if (itens.DataItemsSelecionados.length == 0) {
                return;
            }

            var grid = $('#GridItens').data("kendoGrid");
            var model = grid.dataSource.options.schema.model;
            var dadosAtuais = grid.dataSource.data();
            var novosDados = itens.DataItemsSelecionados;


            for (var i = 0; i < novosDados.length; i++) {
                var dataItemNovo = novosDados[i];

                for (var j = 0; j < dadosAtuais.length; j++) {
                    var dataItemAtual = dadosAtuais[j];
                    if (dataItemNovo.Referencia == dataItemAtual.Referencia) {
                        dataItemNovo.Descartado = true;
                    }
                }
                if (!dataItemNovo.Descartado) {
                    var dataItemNovoFinal = {
                        Referencia: dataItemNovo.Referencia,
                        Descricao: dataItemNovo.Descricao,
                        UnidadeMedida: dataItemNovo.UnidadeMedida,
                        Id: 0,
                        Custo: atualizeCustoAtual(dataItemNovo.Referencia)
                    };
                    
                    dadosAtuais.unshift(dataItemNovoFinal);
                }
            }

            var dataSource = new kendo.data.DataSource({
                data: dadosAtuais,
                schema: {
                    model: model
                }
            });
            dataSource.read();
            grid.setDataSource(dataSource);
            grid.refresh();

        });

        $('#form').submit(function (e) {
            //e.preventDefault();
            limpeMensagensAlerta();

            var dataGridItens = $("#GridItens").data("kendoGrid").dataSource.data();
            var mensagem = "";
            for (var i = 0; i < dataGridItens.length; i++) {
                var dataItem = dataGridItens[i];
                if (dataItem.Custo == 0 || dataItem.Custo == null) {
                    mensagem += "O item de referência: " + dataItem.Referencia + " não tem valor na coluna custo.<br/>";
                }
            }

            if (mensagem != "") {
                e.preventDefault();
                exibaAlertaErro(mensagem);
                $('#btnSubmit').button('reset');
                return false;
            }

            return true;
        });
    });

    function formateDecimalGrid(valor) {
        if (valor == null) {
            return "";
        }
        return valor.toString().replace(".", ",");
    }

    function index(dataItem) {
        var data = $("#GridItens").data("kendoGrid").dataSource.data();
        return data.indexOf(dataItem);
    }

    function atualizeCustoAtual(referencia) {
        $.ajaxSetup({
            async: false
        });
        var url = '/Almoxarifado/Material/ObtenhaCustoAtual?referencia=' + referencia;
        var retorno;
        $.getJSON(url, function (result) {
            retorno = result.Custo == null ? 0 : result.Custo;
        }).fail(function (jqXhr, textStatus, errorThrown) {
            exibaAlertaErro(errorThrown);
        });
        $.ajaxSetup({
            async: true
        });

        return retorno;
    }

    function onEditGrid(e) {
        if (e.container.index() == 1 || e.container.index() == 2 || e.container.index() == 3) {
            this.closeCell();
        }
    }

</script>