@model Fashion.ERP.Web.Areas.EngenhariaProduto.Models.ModeloMaterialConsumoModel

@using (Html.BeginForm(MVC.EngenhariaProduto.ModeloMaterialConsumo.ModeloMaterialConsumo(), FormMethod.Post, new {id = "form", @class = "form-horizontal"}))
{
    @Html.AntiForgeryToken()
    @Html.ValidationSummaryEx()
    @Html.HiddenFor(x => x.ModeloId)
    
    <ul class="nav nav-tabs">
        <li>@Html.ActionLinkAuth("Detalhar", MVC.EngenhariaProduto.Modelo.Detalhar(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Editar", MVC.EngenhariaProduto.Modelo.Editar(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Variação", MVC.EngenhariaProduto.Modelo.Variacao(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Modelagem", MVC.EngenhariaProduto.Modelo.Modelagem(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Sequência Produção", MVC.EngenhariaProduto.SequenciaProducao.SequenciaProducao(Model.ModeloId))</li>
        <li class="active">@Html.ActionLinkAuth("Materiais de Consumo", MVC.EngenhariaProduto.ModeloMaterialConsumo.ModeloMaterialConsumo(Model.ModeloId))</li>
        <li>@Html.ActionLinkAuth("Programação Bordado", MVC.EngenhariaProduto.Modelo.ProgramacaoBordado(Model.ModeloId))</li>
    </ul>

    <br/>

    <fieldset>
        <legend><small>Dados do Modelo</small></legend>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloReferencia, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.ModeloReferencia)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloDescricao, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.ModeloDescricao)
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div class="row">
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloEstilistaNome, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.ValueFor(x => x.ModeloEstilistaNome)
                        </div>
                    </div>
                </div>
            </div>
            <div class="col-sm-6">
                <div class="form-group form-group-sm">
                    @Html.LabelFor(x => x.ModeloDataCriacao, new { @class = "control-label col-sm-4 col-md-3 font-bold" })
                    <div class="col-sm-8 col-md-8 col-lg-7">
                        <div class="form-control-static no-gutter">
                            @Html.DisplayFor(x => x.ModeloDataCriacao)
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </fieldset>

    <fieldset>
        <legend><small>Materiais de Consumo</small></legend>
        <div class="row">
            <div class="col-sm-12">
                @(Html.Kendo().Grid(@Model.GridItens)
                      .Name("GridItens")
                      .Columns(columns =>
                      {
                          columns.Bound(p => p.Id).Hidden().ClientTemplate(
                              "<input type='hidden' name='GridItens[#= index(data)#].Id' value='#= Id #' />");
                          columns.Bound(p => p.Referencia).ClientTemplate("#= Referencia #" +
                                                                          "<input type='hidden' name='GridItens[#= index(data)#].Referencia' value='#= Referencia #' />");
                          columns.Bound(p => p.Descricao).ClientTemplate("#= Descricao #" +
                                                                         "<input type='hidden' name='GridItens[#= index(data)#].Descricao' value='#= Descricao #' />");
                          columns.Bound(p => p.UnidadeMedida).Width(55).ClientTemplate("#= UnidadeMedida #" +
                                                                                       "<input type='hidden' name='GridItens[#= index(data)#].UnidadeMedida' value='#= UnidadeMedida #' />").EditorTemplateName("UnidadeMedidaList");
                          columns.Bound(p => p.Quantidade).Width(80).ClientTemplate("#= kendo.toString(Quantidade, \"n2\") #" +
                                                                                    "<input type='hidden' name='GridItens[#= index(data)#].Quantidade' value='#= formateDecimalGrid(Quantidade) #' />");
                          columns.Bound(p => p.DepartamentoProducao).Width(55).ClientTemplate("#= DepartamentoProducao #" +
                                                                                              "<input type='hidden' name='GridItens[#= index(data)#].DepartamentoProducao' value='#= DepartamentoProducao #' />").EditorTemplateName("DepartamentoProducaoList");
                          columns.Bound(p => p.Foto).ClientTemplate( "#if(Foto != null  && Foto != '') {#" + 
                                                                     "<a href='" + "#= Foto #" + "' data-lightbox='foto' title='Material'><img src='" + "#= Foto #" + "' class='img-rounded' style='width: 48px; height: 48px;'/></a>"+ 
                                                                     "#}#" +
                                                                     "<input type='hidden' name='GridItens[#= index(data)#].Foto' value='#= Foto #' />").Width(60);
                          columns.Command(command => command.Destroy()).Width(110);
                      })
                      .DataSource(s => s.Ajax()
                          .Model(model =>
                          {
                              model.Id(item => item.Id);
                              model.Field(item => item.Referencia).Editable(false);
                              model.Field(item => item.Descricao).Editable(false);
                              model.Field(item => item.UnidadeMedida).Editable(true);
                              model.Field(item => item.Foto).Editable(false); 
                          })
                      )
                      .ToolBar(toolbar => toolbar.Custom().Text("Incluir").HtmlAttributes(new {@id = "pesquisarvarios-material", @href = "javascript:void(0)", @class = "btn-primary"}))
                      .Editable(editable => editable.Mode(GridEditMode.InCell))
                      .Resizable(resize => resize.Columns(true))
                      .Navigatable()
                      )
            </div>     
        </div>
    </fieldset>
   
    <br/>

    <div class="row">
        <div class="col-sm-6">
            <div class="form-group form-group-sm">
                <div class="col-sm-offset-4 col-md-offset-3 col-sm-8 col-md-9">
                    <button id="btnSubmit" class="btn btn-primary" type="submit" data-loading-text="Aguarde...">Salvar</button>
                </div>
            </div>
        </div>     
    </div>
}

<script>
    $(document).ready(function () {

        $('#form').submit(function (e) {
            //e.preventDefault();
            limpeMensagensAlerta();

            var dataGridItens = $("#GridItens").data("kendoGrid").dataSource.data();

            if (dataGridItens.length == 0) {
                e.preventDefault();
                exibaAlertaErro("Insira pelo menos um item na grid.");
                $('#btnSubmit').button('reset');
                return false;
            }

            var mensagem = "";
            for (var i = 0; i < dataGridItens.length; i++) {
                var dataItem = dataGridItens[i];
                if (dataItem.Quantidade == 0 || dataItem.Quantidade == null) {
                    mensagem += "O item de referência: " + dataItem.Referencia + " não tem valor na coluna quantidade.<br/>";
                }
            }

            for (var i = 0; i < dataGridItens.length; i++) {
                var dataItem = dataGridItens[i];
                if (dataItem.DepartamentoProducao == '' || dataItem.DepartamentoProducao == null) {
                    mensagem += "O item de referência: " + dataItem.Referencia + " não tem valor na coluna departamento.<br/>";
                }
            }

            if (mensagem != "") {
                e.preventDefault();
                exibaAlertaErro(mensagem);
                $('#btnSubmit').button('reset');
                return false;
            }
            
            return true;
        });

        $("#selecionar-material").on("pesquisar", function (ev, itens) {

            if (itens.DataItemsSelecionados.length == 0) {
                return;
            }

            var grid = $('#GridItens').data("kendoGrid");
            var model = grid.dataSource.options.schema.model;
            var dadosAtuais = grid.dataSource.data();
            var novosDados = itens.DataItemsSelecionados;


            for (var i = 0; i < novosDados.length; i++) {
                var dataItemNovo = novosDados[i];

                for (var j = 0; j < dadosAtuais.length; j++) {
                    var dataItemAtual = dadosAtuais[j];
                    if (dataItemNovo.Referencia == dataItemAtual.Referencia) {
                        dataItemNovo.Descartado = true;
                    }
                }
                if (!dataItemNovo.Descartado) {
                    var dataItemNovoFinal = {
                        Referencia: dataItemNovo.Referencia,
                        Descricao: dataItemNovo.Descricao,
                        UnidadeMedida: dataItemNovo.UnidadeMedida,
                        Id: 0,
                        Quantidade: 0,
                        DepartamentoProducao: '',
                        Foto: dataItemNovo.Foto
                    };
                    
                    dadosAtuais.unshift(dataItemNovoFinal);
                }
            }

            var dataSource = new kendo.data.DataSource({
                data: dadosAtuais,
                schema: {
                    model: model
                }
            });
            dataSource.read();
            grid.setDataSource(dataSource);
            grid.refresh();

        });
    });

    function index(dataItem) {
        var data = $("#GridItens").data("kendoGrid").dataSource.data();
        return data.indexOf(dataItem);
    }


    function formateDecimalGrid(valor) {
        return valor.toString().replace(".", ",");
    }

</script>

@{
    Html.RenderAction("PesquisarVarios", "Material", new { area = "Almoxarifado" });
}