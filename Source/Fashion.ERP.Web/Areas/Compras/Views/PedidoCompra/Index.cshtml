@using Fashion.ERP.Domain.Compras
@model Fashion.ERP.Web.Areas.Compras.Models.PesquisaPedidoCompraModel

@section javascript{@Scripts.Render(Links.Bundles.Scripts.PdfObject)}

<div class="well well-small">
    @Html.ActionLinkAuth("Novo", MVC.Compras.PedidoCompra.Novo(), new { @class = "btn btn-primary" })
</div>
@Html.ValidationSummaryEx()
@using (Html.BeginForm(MVC.Compras.PedidoCompra.Index(), FormMethod.Post, new { @class = "form-horizontal small-labels" }))
{
    @Html.AntiForgeryToken()
    <div class="accordion" id="accordion2">
        <div class="accordion-group">
            <div class="accordion-heading">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapsePesquisar">Pesquisar
                </a>
            </div>
            <div id="collapsePesquisar" class="accordion-body collapse">
                <div class="accordion-inner">
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.UnidadeEstocadora, new { @class = "control-label " })
                                <div class="controls">
                                    @Html.DropDownList("UnidadeEstocadora", null, "-- Selecione --", new { @class = "input-xlarge" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span4">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Numero)
                                <div class="controls">
                                    @Html.EditorFor(x => x.Numero, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Fornecedor)
                                <div class="controls">
                                    @Html.HiddenFor(x => x.Fornecedor, new { id = "Fornecedor" })
                                    <div class="input-append">
                                        <input id="codigo-fornecedor" class="input-small numeric-only" type="text" />
                                        <button id="pesquisar-fornecedor" class="btn" type="button"><i class="icon-search"></i></button>
                                        <span id="descricao-fornecedor" class="add-on"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.SituacaoCompra)
                                <div class="controls">
                                    @Html.DropDownListFor(x => x.SituacaoCompra, Model.SituacaoCompra.ToSelectList(), "-- Selecione --")
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.DataCompraInicio)
                                <div class="controls">
                                    @Html.EditorFor(x => x.DataCompraInicio, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.DataCompraFim)
                                <div class="controls">
                                    @Html.EditorFor(x => x.DataCompraFim, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.ValorCompraInicio)
                                <div class="controls">
                                    @Html.EditorFor(x => x.ValorCompraInicio, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                        <div class="span3">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.ValorCompraFim)
                                <div class="controls">
                                    @Html.EditorFor(x => x.ValorCompraFim, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.Label("referencia-material", "Referência", new { @class = "control-label" })
                                <div class="controls">
                                    @Html.Hidden("Material")
                                    <div class="input-append">
                                        <input id="referencia-material" class="input-small" type="text" />
                                        <button id="pesquisar-material" class="btn" type="button"><i class="icon-search"></i></button>
                                        <span id="descricao-material" class="add-on"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.Comprador)
                                <div class="controls">
                                    @Html.HiddenFor(x => x.Comprador, new { id = "funcionario" })
                                    <div class="input-append">
                                        <input id="codigo-funcionario" class="input-small numeric-only" type="text" />
                                        <button id="pesquisar-funcionario" class="btn" type="button"><i class="icon-search"></i></button>
                                        <span id="descricao-funcionario" class="add-on"></span>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="span6">
                            <div class="control-group">
                                @Html.LabelForRequired(x => x.ReferenciaExterna)
                                <div class="controls">
                                    @Html.EditorFor(x => x.ReferenciaExterna, new { @class = "input-small" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="well">
                        <div class="row">
                            <div class="span3">
                                @Html.HiddenFor(x => x.ModoConsulta)
                                <div class="btn-group" data-toggle="buttons-radio">
                                    <button name="btn-ModoConsulta" class="btn btn-info active" type="button" value="listagem">Listagem</button>
                                    <button name="btn-ModoConsulta" class="btn btn-info" type="button" value="impressao">Impressão</button>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="span3">
                                <div id="row-imprimir" class="control-group" style="display: none">
                                    @Html.LabelForRequired(x => x.AgruparPor)
                                    <div class="controls">
                                        @Html.DropDownList("AgruparPor", "--Selecione--")
                                    </div>
                                </div>
                            </div>
                            <div class="span3">
                                <div class="control-group">
                                    @Html.LabelForRequired(x => x.OrdenarPor, new { @class = "control-label " })
                                    <div class="controls">
                                        @Html.DropDownList("OrdenarPor", "--Selecione--")
                                    </div>
                                </div>
                            </div>
                            <div class="span3">
                                <div class="control-group">
                                    @Html.LabelForRequired(x => x.OrdenarEm, new { @class = "control-label " })
                                    <div class="controls">
                                        <select name="OrdenarEm">
                                            <option value="asc">Ascendente</option>
                                            <option value="desc">Descendente</option>
                                        </select>
                                    </div>
                                </div>
                            </div>
                            <div class="span3">
                                <button id="pesquisar-relatorio" class="btn btn-info pull-right" type="button" data-loading-text="Aguarde..." style="display: none;">Pesquisar</button>
                                <button id="pesquisar-grid" class="btn btn-info pull-right" type="submit" data-loading-text="Aguarde...">Pesquisar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div id="pdf"></div>
@(Html.Kendo().Grid(Model.Grid)
	.Name("Grid")
	.Columns(columns =>
	{
		columns.Bound(x => x.Numero);
		columns.Bound(x => x.Fornecedor);
		columns.Bound(x => x.Comprador);
        columns.Bound(x => x.DataCompra).Format("{0:dd/MM/yyyy}");
        columns.Bound(x => x.ValorLiquido).Format("{0:C}");
	    columns.Bound(x => x.SituacaoCompra).Template(s => s.SituacaoCompra.EnumToString());
		columns.Template(item => Html.EditarAuth(MVC.Compras.PedidoCompra.Editar(item.Id))).Width(80);
        columns.Template(item => Html.ActionLinkAuth(item.Autorizado ? "Invalidar" : "Validar", MVC.Compras.ValidaPedidoCompra.Validar(item.Id), new { @class = "btn btn-small btn-primary" })).Width(80);        
        columns.Template(item => Html.CancelaAuth(MVC.Compras.PedidoCompraCancelamento.CancelamentoPedido(item.Id))).Width(80);
        columns.Template(item => Html.ActionLinkAuth("Imprimir", MVC.Compras.PedidoCompra.Imprimir(item.Id), new { @class = "btn btn-small btn-primary" , target = "_blank"})).Width(80);        
	})
)
<script>
    $(function () {
        // Seleciona o modo de consulta
        $('button[name=btn-ModoConsulta]').on('click', function () {

            var $ModoConsulta = $('#ModoConsulta');

            if (this.value == 'impressao') {
                $ModoConsulta.val('Imprimir');

                $('#row-imprimir').show();
                $('#pesquisar-relatorio').show();
                $('#pesquisar-grid').hide();

            } else {
                $ModoConsulta.val('Listar');

                $('#row-imprimir').hide();
                $('#pesquisar-relatorio').hide();
                $('#pesquisar-grid').show();

            }
        });
    })
</script>
@{
    Html.RenderAction("Pesquisar", "Fornecedor", new { area = "Comum" });
    Html.RenderAction("Pesquisar", "Funcionario", new { area = "Comum", funcaoFuncionario = new[] { "Comprador", "GerenteCompra" } });
    Html.RenderAction("Pesquisar", "Material", new { area = "Almoxarifado" });
}