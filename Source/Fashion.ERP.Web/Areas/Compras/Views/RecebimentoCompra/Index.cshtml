@using Fashion.ERP.Domain.Compras
@using Fashion.ERP.Web.Areas.Compras.Models
@model PesquisaRecebimentoCompraModel

@section javascript{@Scripts.Render(Links.Bundles.Scripts.PdfObject)}

<div class="well well-sm">
    @Html.ActionLinkAuth("Novo", MVC.Compras.RecebimentoCompra.Novo(), new { @class = "btn btn-primary" })
</div>
@Html.ValidationSummaryEx()
@using (Html.BeginForm(MVC.Compras.RecebimentoCompra.Index(), FormMethod.Post, new { @class = "form-horizontal small-labels" }))
{
    @Html.AntiForgeryToken()


    <div class="panel-group" id="accordion2">
        <div class="panel panel-default">
            <div class="panel-heading">
                <a class="accordion-toggle" data-toggle="collapse" data-parent="#accordion2" href="#collapsePesquisar">Pesquisar
                </a>
            </div>
            <div id="collapsePesquisar" class="panel-collapse collapse">
                <div class="panel-body">
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.Numero)
                                <div class="col-sm-8 col-md-8 col-lg-7">
                                    @Html.TextBoxFor(x => x.Numero, new { @class = "numeric-only form-control" })
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.UnidadeEstocadora)
                                <div class="col-sm-8 col-md-8 col-lg-7">
                                    @Html.DropDownListFor(x => x.UnidadeEstocadora, null, "-- Selecione --", new { @class = "form-control" })
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.Fornecedor)
                                <div class="col-sm-8 col-md-8 col-lg-7  ">
                                    @Html.CustomKendoComboBoxForFornecedor(x => x.Fornecedor)
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.SituacaoRecebimentoCompra)
                                <div class="col-sm-8 col-md-8 col-lg-7  ">
                                    @Html.DropDownListFor(x => x.SituacaoRecebimentoCompra, Model.SituacaoRecebimentoCompra.ToSelectList(), "-- Selecione --",  new { @class = "form-control"})
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.DataInicio)
                                <div class="col-sm-8 col-md-8 col-lg-7  ">
                                    <div class="col-lg-5 col-md-5 padding0">
                                        @Html.Kendo().DatePickerFor(x => x.DataInicio)
                                    </div>
                                    <div class="col-lg-7 col-md-7">
                                        <div class="form-group form-group-sm" style="margin-bottom: 0;">
                                            @Html.LabelFor(x=>x.DataFim, new { @class = "control-label control-label-meio col-sm-3" })
                                            <div class="col-lg-9 col-md-9 padding0">
                                                @Html.Kendo().DatePickerFor(x => x.DataFim)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.ValorInicio)
                                <div class="col-sm-8 col-md-8 col-lg-7  ">
                                    <div class="col-lg-5 col-md-5 padding0">
                                        <div class="">
                                            @Html.EditorFor(x => x.ValorInicio)
                                        </div>
                                    </div>
                                    <div class="col-lg-7 col-md-7">
                                        <div class="form-group form-group-sm" style="margin-bottom: 0;">
                                            @Html.LabelFor(x=>x.ValorFim, new { @class = "control-label control-label-meio col-sm-3" })
                                            <div class="col-lg-9 col-md-9 padding0">
                                                @Html.EditorFor(x => x.ValorFim)
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                        </div>
                    </div>
                    <div class="row">
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.Label("Material", "Material", new { @class = "control-label col-sm-4 col-md-3" })
                                <div class="col-sm-8 col-md-8 col-lg-7">
                                    @Html.Hidden("Material")
                                    <div class="col-lg-3 col-sm-5 col-md-4 padding0">
                                        <div class="input-group">
                                            <input id="referencia-material" class="numeric-only form-control" type="text" style="width: 70%;">
                                            <span class="input-group-btn pull-left">
                                                <button id="pesquisar-material" class="btn btn-default btn-sm " type="button" data-toggle="modal" data-target="#modal-material">
                                                    <span class="glyphicon glyphicon-search"></span>
                                                </button>
                                            </span>
                                        </div>
                                    </div>
                                    <div class="col-lg-9 col-md-8 col-sm-12 padding0">
                                        <input id="descricao-material" class="form-control" readonly="" data-toggle="tooltip">
                                    </div>
                                </div>
                            </div>
                        </div>
                        <div class="col-sm-6">
                            <div class="form-group form-group-sm">
                                @Html.LabelForRequired(x => x.NumeroPedidoCompra)
                                <div class="col-sm-8 col-md-8 col-lg-7">
                                    @Html.TextBoxFor(x => x.NumeroPedidoCompra, new { @class = "numeric-only form-control" })
                                </div>
                            </div>
                        </div>
                    </div>  
                    <div class="well">
                        <div class="row">
                            <div class="col-sm-12">
                                @Html.HiddenFor(x => x.ModoConsulta)
                                <div class="btn-group" data-toggle="buttons">
                                    <label class="btn btn-default active">
                                        <input name="btn-ModoConsulta" type="radio" value="listagem"/>Listagem
                                    </label>
                                    <label class="btn btn-default">
                                        <input name="btn-ModoConsulta" type="radio" value="impressao"/>Impressão
                                    </label>
                                </div>
                            </div>
                        </div>
                        <br />
                        <div class="row">
                            <div class="col-sm-10 col-md-11">
                                <div id="row-imprimir" style="display: none">
                                    <div class="col-sm-4">
                                        <div class="form-group form-group-sm">
                                            @Html.LabelForRequired(x => x.AgruparPor)
                                            <div class="col-sm-8 col-md-8 col-lg-7  ">
                                                @Html.DropDownList("AgruparPor", null, "--Selecione--", new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group form-group-sm">
                                            @Html.LabelForRequired(x => x.OrdenarPor)
                                            <div class="col-sm-8 col-md-8 col-lg-7  ">
                                                @Html.DropDownList("OrdenarPor", null, "--Selecione--", new { @class = "form-control" })
                                            </div>
                                        </div>
                                    </div>
                                    <div class="col-sm-4">
                                        <div class="form-group form-group-sm">
                                            @Html.Label("OrdenarEm", "Em", new { @class = "control-label col-sm-2 col-md-1" })
                                            <div class="col-sm-8 col-md-8 col-lg-7  ">
                                                <select name="OrdenarEm" class="form-control">
                                                    <option value="asc">Ascendente</option>
                                                    <option value="desc">Descendente</option>
                                                </select>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>
                            <div class="col-sm-2 col-md-1 form-group">
                                <button id="pesquisar-relatorio" class="btn btn-default pull-right" type="button" data-loading-text="Aguarde..." style="display: none;">Pesquisar</button>
                                <button id="pesquisar-grid-ajax" class="btn btn-default pull-right" type="submit" data-loading-text="Aguarde...">Pesquisar</button>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </div>
}
<div id="pdf"></div>

<div class="table-responsive">
    @(Html.Kendo().Grid<GridRecebimentoCompraModel>()
          .Name("Grid")    
          .DataSource(dataSource => dataSource
              .Ajax()
              .ServerOperation(true)
              .PageSize(15)
              .Read(read => read.Action("ObtenhaListaGridModel", "RecebimentoCompra").Data("ObtenhaModelJsonObject"))
              .Events(events => events.Error("onKendoGridError"))
          )
          .Columns(columns =>
          {
              columns.Bound(x => x.Numero);
              columns.Bound(x => x.FornecedorNome);
              columns.Bound(x => x.Data).Format("{0:d}");
              columns.Bound(x => x.Valor).Format("{0:C}");
              columns.Bound(x => x.SituacaoRecebimentoCompra).Template(s => s.SituacaoRecebimentoCompra.EnumToString());
              columns.Template(@<text></text>).ClientTemplate(@Html.ActionLinkAuth("Editar", "Editar", "RecebimentoCompra", new {Id = "#= Id #", Area = "Compras"}, new {@class = "btn btn-primary"}).ToHtmlString()).Width(80).Title("");                       
          })
          .Resizable(resize => resize.Columns(true))
          .Reorderable(reorder => reorder.Columns(true))
          .Pageable()
          .Sortable()
          .Groupable()   
          )
</div>

<script>
    $(function () {

        // Seleciona o modo de consulta
        $('button[name=btn-ModoConsulta]').on('click', function () {

            var $ModoConsulta = $('#ModoConsulta');

            if (this.value == 'impressao') {
                $ModoConsulta.val('Imprimir');

                $('#row-imprimir').show();
                $('#pesquisar-relatorio').show();
                $('#pesquisar-grid').hide();

            } else {
                $ModoConsulta.val('Listar');
                $("#pdf").html("");
                $("#pdf").attr("style", "");
                $("#Grid").show();
                $('#row-imprimir').hide();
                $('#pesquisar-relatorio').hide();
                $('#pesquisar-grid').show();

            }
        });
    })
</script>
@{
    Html.RenderAction("PesquisarComParametros", "Fornecedor", new { area = "Comum", SelecaoUnica = "true" });
    Html.RenderAction("Pesquisar", "Material", new { area = "Almoxarifado" });
}