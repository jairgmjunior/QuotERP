@model Fashion.ERP.Web.Areas.Compras.Models.PedidoCompraRecebimentoModel

@{ Layout = null; }

<legend><small>Pedido de Compra</small></legend>
    <div class="detail">
        <div class="row">
            <div class="col-md-4">
                <div class="form-group">
                    @Html.LabelFor(x => x.NumeroPedido, new { @class = "title-label" })
                    <div class="value-label">
                        @Html.DisplayFor(x => x.NumeroPedido)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.FornecedorNome, new { @class = "title-label" })
                    <div class="value-label">
                        @Html.DisplayFor(x => x.FornecedorNome)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.CompradorNome, new { @class = "title-label" })
                    <div class="value-label">
                        @Html.DisplayFor(x => x.CompradorNome)
                    </div>
                </div>
            </div>
            <div class="col-md-3">
                <div class="form-group">
                    @Html.LabelFor(x => x.DataCompra, new { @class = "title-label" })
                    <div class="value-label">
                        @Html.DisplayFor(x => x.DataCompra)
                    </div>
                </div>
                <div class="form-group">
                    @Html.LabelFor(x => x.PrevisaoEntrega, new { @class = "title-label" })
                    <div class="value-label">
                        @Html.DisplayFor(x => x.PrevisaoEntrega)
                    </div>
                </div>
            </div>
        </div>
    </div>

    <fieldset>
        <legend><small>Itens do Pedido de Compra</small></legend>
        @(Html.Kendo().Grid(Model.Grid)
                .Name("GridPedidosItens")
                .Columns(columns =>
                {
                    columns.Bound(x => x.Id).Hidden();
                    columns.Bound(x => x.MaterialReferenciaPedido).Filterable(true);
                    columns.Bound(x => x.MaterialReferenciaExternaPedido).Filterable(true);
                    columns.Bound(x => x.MaterialDescricaoPedido).Filterable(true);
                    columns.Bound(x => x.UnidadeMedidaSiglaPedido).Filterable(false);
                    columns.Bound(x => x.QuantidadePedido).Filterable(false);
                    columns.Bound(x => x.ValorUnitarioPedido).Format("{0:C}").Filterable(false).Width(70);
                    columns.Bound(x => x.Marcado).Filterable(false).HeaderTemplate("<input id='checkAll' class='check-box' type='checkbox' />")
                        .Title("Select")
                        .ClientTemplate("<div><input type='checkbox' class='chkbx check-box' onclick='clicouCheckBox(this)'/><input type='hidden'  value='#= Marcado #' /></div>");  @*name='GridPedidosItens[#= index(data)#].Marcado'*@
                })
                .DataSource(dataSource => dataSource
                    .Ajax()
                    .ServerOperation(false)  
                    .Model(model => model.Id(e => e.Id))
                )
                .Filterable()
        )
    </fieldset>
    
