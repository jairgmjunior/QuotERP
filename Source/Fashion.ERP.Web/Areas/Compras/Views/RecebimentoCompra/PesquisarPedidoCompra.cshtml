@model Fashion.ERP.Web.Areas.Compras.Models.PedidoCompraRecebimentoModel

@{ Layout = null; }

<fieldset>
    <legend><small><small>Dados do Pedido de Compra</small></small></legend>
    <div class="row">
        <div class="col-sm-7">
            <div class="form-group form-group-sm">
                @Html.LabelForRequired(x => x.NumeroPedido)
                <div class="col-sm-8 col-md-8 col-lg-7">
                    <div class="form-control-static no-gutter">
                        @Html.DisplayFor(x => x.NumeroPedido, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-5">
            <div class="form-group form-group-sm">
                @Html.LabelForRequired(x => x.FornecedorNome)
                <div class="col-sm-8 col-md-8 col-lg-7">
                    <div class="form-control-static no-gutter">
                        @Html.DisplayFor(x => x.FornecedorNome, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-7">
            <div class="form-group form-group-sm">
                @Html.LabelForRequired(x => x.CompradorNome)
                <div class="col-sm-8 col-md-8 col-lg-7">
                    <div class="form-control-static no-gutter">
                        @Html.DisplayFor(x => x.CompradorNome, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
        <div class="col-sm-5">
            <div class="form-group form-group-sm">
                @Html.LabelForRequired(x => x.DataCompra)
                <div class="col-sm-8 col-md-8 col-lg-7">
                    <div class="form-control-static no-gutter">
                        @Html.DisplayFor(x => x.DataCompra, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
    </div>
    <div class="row">
        <div class="col-sm-7">
            <div class="form-group form-group-sm">
                @Html.LabelForRequired(x => x.PrevisaoEntrega)
                <div class="col-sm-8 col-md-8 col-lg-7">
                    <div class="form-control-static no-gutter">
                        @Html.DisplayFor(x => x.PrevisaoEntrega, new { @class = "form-control" })
                    </div>
                </div>
            </div>
        </div>
    </div>
</fieldset>

<fieldset>
    <legend><small><small>Itens do Pedido de Compra</small></small></legend>
    @(Html.Kendo().Grid(Model.Grid)
            .Name("GridPedidosItens")
            .Columns(columns =>
            {
                columns.Bound(x => x.Id).Hidden();
                columns.Bound(x => x.MaterialReferenciaPedido).Filterable(true);
                columns.Bound(x => x.MaterialReferenciaExternaPedido).Filterable(true);
                columns.Bound(x => x.MaterialDescricaoPedido).Filterable(true);
                columns.Bound(x => x.UnidadeMedidaSiglaPedido).Filterable(false);
                columns.Bound(x => x.QuantidadePedido).Filterable(false);
                columns.Bound(x => x.ValorUnitarioPedido).Format("{0:C}").Filterable(false).Width(70);
                columns.Bound(x => x.Marcado).Filterable(false).HeaderTemplate("<input id='checkAll' class='check-box' type='checkbox' />")
                    .Title("Select")
                    .ClientTemplate("<div><input type='checkbox' class='chkbx check-box' onclick='clicouCheckBox(this)'/><input type='hidden'  value='#= Marcado #' /></div>");  @*name='GridPedidosItens[#= index(data)#].Marcado'*@
            })
            .DataSource(dataSource => dataSource
                .Ajax()
                .ServerOperation(false)  
                .Model(model => model.Id(e => e.Id))
            )
            .Filterable()
    )
</fieldset>
    
